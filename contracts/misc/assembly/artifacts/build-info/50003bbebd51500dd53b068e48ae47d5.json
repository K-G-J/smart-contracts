{
	"id": "50003bbebd51500dd53b068e48ae47d5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/misc/assembly/MostSignificantBit.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n/*\nRETURNS THE POSITION OF THE LEFT-MOST 1\n*/\n\ncontract MostSignificantBitFunction {\n    // Find most significant bit using binary search\n    function mostSignificantBit(uint x) external pure returns (uint msb) {\n        // x >= 2 ** 128\n        if (x >= 0x100000000000000000000000000000000) {\n            x >>= 128;\n            msb += 128;\n        }\n        // x >= 2 ** 64\n        if (x >= 0x10000000000000000) {\n            x >>= 64;\n            msb += 64;\n        }\n        // x >= 2 ** 32\n        if (x >= 0x100000000) {\n            x >>= 32;\n            msb += 32;\n        }\n        // x >= 2 ** 16\n        if (x >= 0x10000) {\n            x >>= 16;\n            msb += 16;\n        }\n        // x >= 2 ** 8\n        if (x >= 0x100) {\n            x >>= 8;\n            msb += 8;\n        }\n        // x >= 2 ** 4\n        if (x >= 0x10) {\n            x >>= 4;\n            msb += 4;\n        }\n        // x >= 2 ** 2\n        if (x >= 0x4) {\n            x >>= 2;\n            msb += 2;\n        }\n        // x >= 2 ** 1\n        if (x >= 0x2) msb += 1;\n    }\n}\n\ncontract MostSignificantBitAssembly {\n    function mostSignificantBit(uint x) external pure returns (uint msb) {\n        assembly {\n            let f := shl(7, gt(x, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            x := shr(f, x)\n            // or can be replaced with add\n            msb := or(msb, f)\n        }\n        assembly {\n            let f := shl(6, gt(x, 0xFFFFFFFFFFFFFFFF))\n            x := shr(f, x)\n            msb := or(msb, f)\n        }\n        assembly {\n            let f := shl(5, gt(x, 0xFFFFFFFF))\n            x := shr(f, x)\n            msb := or(msb, f)\n        }\n        assembly {\n            let f := shl(4, gt(x, 0xFFFF))\n            x := shr(f, x)\n            msb := or(msb, f)\n        }\n        assembly {\n            let f := shl(3, gt(x, 0xFF))\n            x := shr(f, x)\n            msb := or(msb, f)\n        }\n        assembly {\n            let f := shl(2, gt(x, 0xF))\n            x := shr(f, x)\n            msb := or(msb, f)\n        }\n        assembly {\n            let f := shl(1, gt(x, 0x3))\n            x := shr(f, x)\n            msb := or(msb, f)\n        }\n        assembly {\n            let f := gt(x, 0x1)\n            msb := or(msb, f)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/misc/assembly/MostSignificantBit.sol": {
				"MostSignificantBitAssembly": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "mostSignificantBit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "msb",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/misc/assembly/MostSignificantBit.sol\":1113:2306  contract MostSignificantBitAssembly {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1113:2306  contract MostSignificantBitAssembly {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xe6bcbc65\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1155:2304  function mostSignificantBit(uint x) external pure returns (uint msb) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1214:1222  uint msb */\n      0x00\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1279:1313  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF */\n      0xffffffffffffffffffffffffffffffff\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1276:1277  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1273:1314  gt(x, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) */\n      gt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1270:1271  7 */\n      0x07\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1266:1315  shl(7, gt(x, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)) */\n      shl\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1340:1341  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1337:1338  f */\n      dup2\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1333:1342  shr(f, x) */\n      shr\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1328:1342  x := shr(f, x) */\n      swap3\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1413:1414  f */\n      dup1\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1408:1411  msb */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1405:1415  or(msb, f) */\n      or\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1398:1415  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1243:1425  {... */\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1479:1497  0xFFFFFFFFFFFFFFFF */\n      0xffffffffffffffff\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1476:1477  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1473:1498  gt(x, 0xFFFFFFFFFFFFFFFF) */\n      gt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1470:1471  6 */\n      0x06\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1466:1499  shl(6, gt(x, 0xFFFFFFFFFFFFFFFF)) */\n      shl\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1524:1525  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1521:1522  f */\n      dup2\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1517:1526  shr(f, x) */\n      shr\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1512:1526  x := shr(f, x) */\n      swap3\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1554:1555  f */\n      dup1\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1549:1552  msb */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1546:1556  or(msb, f) */\n      or\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1539:1556  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1443:1566  {... */\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1620:1630  0xFFFFFFFF */\n      0xffffffff\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1617:1618  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1614:1631  gt(x, 0xFFFFFFFF) */\n      gt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1611:1612  5 */\n      0x05\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1607:1632  shl(5, gt(x, 0xFFFFFFFF)) */\n      shl\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1657:1658  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1654:1655  f */\n      dup2\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1650:1659  shr(f, x) */\n      shr\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1645:1659  x := shr(f, x) */\n      swap3\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1687:1688  f */\n      dup1\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1682:1685  msb */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1679:1689  or(msb, f) */\n      or\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1672:1689  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1584:1699  {... */\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1753:1759  0xFFFF */\n      0xffff\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1750:1751  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1747:1760  gt(x, 0xFFFF) */\n      gt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1744:1745  4 */\n      0x04\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1740:1761  shl(4, gt(x, 0xFFFF)) */\n      shl\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1786:1787  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1783:1784  f */\n      dup2\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1779:1788  shr(f, x) */\n      shr\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1774:1788  x := shr(f, x) */\n      swap3\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1816:1817  f */\n      dup1\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1811:1814  msb */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1808:1818  or(msb, f) */\n      or\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1801:1818  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1717:1828  {... */\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1882:1886  0xFF */\n      0xff\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1879:1880  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1876:1887  gt(x, 0xFF) */\n      gt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1873:1874  3 */\n      0x03\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1869:1888  shl(3, gt(x, 0xFF)) */\n      shl\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1913:1914  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1910:1911  f */\n      dup2\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1906:1915  shr(f, x) */\n      shr\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1901:1915  x := shr(f, x) */\n      swap3\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1943:1944  f */\n      dup1\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1938:1941  msb */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1935:1945  or(msb, f) */\n      or\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1928:1945  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1846:1955  {... */\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2009:2012  0xF */\n      0x0f\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2006:2007  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2003:2013  gt(x, 0xF) */\n      gt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2000:2001  2 */\n      0x02\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1996:2014  shl(2, gt(x, 0xF)) */\n      shl\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2039:2040  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2036:2037  f */\n      dup2\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2032:2041  shr(f, x) */\n      shr\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2027:2041  x := shr(f, x) */\n      swap3\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2069:2070  f */\n      dup1\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2064:2067  msb */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2061:2071  or(msb, f) */\n      or\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2054:2071  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1973:2081  {... */\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2135:2138  0x3 */\n      0x03\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2132:2133  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2129:2139  gt(x, 0x3) */\n      gt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2126:2127  1 */\n      0x01\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2122:2140  shl(1, gt(x, 0x3)) */\n      shl\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2165:2166  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2162:2163  f */\n      dup2\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2158:2167  shr(f, x) */\n      shr\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2153:2167  x := shr(f, x) */\n      swap3\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2195:2196  f */\n      dup1\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2190:2193  msb */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2187:2197  or(msb, f) */\n      or\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2180:2197  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2099:2207  {... */\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2254:2257  0x1 */\n      0x01\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2251:2252  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2248:2258  gt(x, 0x1) */\n      gt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2286:2287  f */\n      dup1\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2281:2284  msb */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2278:2288  or(msb, f) */\n      or\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2271:2288  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":2225:2298  {... */\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1155:2304  function mostSignificantBit(uint x) external pure returns (uint msb) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_12:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_14:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_15:\n        /* \"#utility.yul\":490:514   */\n      tag_24\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_14\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_25\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_25:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_16:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_27\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_15\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_6:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_29\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_30\n      tag_12\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":766:885   */\n    tag_29:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_31\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_16\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_17:\n        /* \"#utility.yul\":1112:1136   */\n      tag_33\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_14\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_9:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_35\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_17\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206f9cccb8c89874abcfa142460d70c145e218d691f27ab2d549e29a9f6758d8a864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506101c58061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063e6bcbc651461002d575b5f80fd5b6100476004803603810190610042919061013c565b61005d565b6040516100549190610176565b60405180910390f35b5f6fffffffffffffffffffffffffffffffff821160071b82811c925080821791505067ffffffffffffffff821160061b82811c925080821791505063ffffffff821160051b82811c925080821791505061ffff821160041b82811c925080821791505060ff821160031b82811c9250808217915050600f821160021b82811c92508082179150506003821160011b82811c925080821791505060018211808217915050919050565b5f80fd5b5f819050919050565b61011b81610109565b8114610125575f80fd5b50565b5f8135905061013681610112565b92915050565b5f6020828403121561015157610150610105565b5b5f61015e84828501610128565b91505092915050565b61017081610109565b82525050565b5f6020820190506101895f830184610167565b9291505056fea26469706673582212206f9cccb8c89874abcfa142460d70c145e218d691f27ab2d549e29a9f6758d8a864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE6BCBC65 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x13C JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x7 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x6 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH4 0xFFFFFFFF DUP3 GT PUSH1 0x5 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH2 0xFFFF DUP3 GT PUSH1 0x4 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0xFF DUP3 GT PUSH1 0x3 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0xF DUP3 GT PUSH1 0x2 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0x3 DUP3 GT PUSH1 0x1 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0x1 DUP3 GT DUP1 DUP3 OR SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B DUP2 PUSH2 0x109 JUMP JUMPDEST DUP2 EQ PUSH2 0x125 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x136 DUP2 PUSH2 0x112 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151 JUMPI PUSH2 0x150 PUSH2 0x105 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15E DUP5 DUP3 DUP6 ADD PUSH2 0x128 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x170 DUP2 PUSH2 0x109 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189 PUSH0 DUP4 ADD DUP5 PUSH2 0x167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x9CCCB8C89874ABCFA142460D70C145E2 XOR 0xD6 SWAP2 CALLCODE PUSH27 0xB2D549E29A9F6758D8A864736F6C63430008140033000000000000 ",
							"sourceMap": "1113:1193:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@mostSignificantBit_125": {
									"entryPoint": 93,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1374:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:1",
														"type": ""
													}
												],
												"src": "1025:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													}
												],
												"src": "1149:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063e6bcbc651461002d575b5f80fd5b6100476004803603810190610042919061013c565b61005d565b6040516100549190610176565b60405180910390f35b5f6fffffffffffffffffffffffffffffffff821160071b82811c925080821791505067ffffffffffffffff821160061b82811c925080821791505063ffffffff821160051b82811c925080821791505061ffff821160041b82811c925080821791505060ff821160031b82811c9250808217915050600f821160021b82811c92508082179150506003821160011b82811c925080821791505060018211808217915050919050565b5f80fd5b5f819050919050565b61011b81610109565b8114610125575f80fd5b50565b5f8135905061013681610112565b92915050565b5f6020828403121561015157610150610105565b5b5f61015e84828501610128565b91505092915050565b61017081610109565b82525050565b5f6020820190506101895f830184610167565b9291505056fea26469706673582212206f9cccb8c89874abcfa142460d70c145e218d691f27ab2d549e29a9f6758d8a864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE6BCBC65 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x13C JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x7 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x6 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH4 0xFFFFFFFF DUP3 GT PUSH1 0x5 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH2 0xFFFF DUP3 GT PUSH1 0x4 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0xFF DUP3 GT PUSH1 0x3 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0xF DUP3 GT PUSH1 0x2 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0x3 DUP3 GT PUSH1 0x1 SHL DUP3 DUP2 SHR SWAP3 POP DUP1 DUP3 OR SWAP2 POP POP PUSH1 0x1 DUP3 GT DUP1 DUP3 OR SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B DUP2 PUSH2 0x109 JUMP JUMPDEST DUP2 EQ PUSH2 0x125 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x136 DUP2 PUSH2 0x112 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151 JUMPI PUSH2 0x150 PUSH2 0x105 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15E DUP5 DUP3 DUP6 ADD PUSH2 0x128 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x170 DUP2 PUSH2 0x109 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189 PUSH0 DUP4 ADD DUP5 PUSH2 0x167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x9CCCB8C89874ABCFA142460D70C145E2 XOR 0xD6 SWAP2 CALLCODE PUSH27 0xB2D549E29A9F6758D8A864736F6C63430008140033000000000000 ",
							"sourceMap": "1113:1193:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1155:1149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1214:8;1279:34;1276:1;1273:41;1270:1;1266:49;1340:1;1337;1333:9;1328:14;;1413:1;1408:3;1405:10;1398:17;;1243:182;1479:18;1476:1;1473:25;1470:1;1466:33;1524:1;1521;1517:9;1512:14;;1554:1;1549:3;1546:10;1539:17;;1443:123;1620:10;1617:1;1614:17;1611:1;1607:25;1657:1;1654;1650:9;1645:14;;1687:1;1682:3;1679:10;1672:17;;1584:115;1753:6;1750:1;1747:13;1744:1;1740:21;1786:1;1783;1779:9;1774:14;;1816:1;1811:3;1808:10;1801:17;;1717:111;1882:4;1879:1;1876:11;1873:1;1869:19;1913:1;1910;1906:9;1901:14;;1943:1;1938:3;1935:10;1928:17;;1846:109;2009:3;2006:1;2003:10;2000:1;1996:18;2039:1;2036;2032:9;2027:14;;2069:1;2064:3;2061:10;2054:17;;1973:108;2135:3;2132:1;2129:10;2126:1;2122:18;2165:1;2162;2158:9;2153:14;;2195:1;2190:3;2187:10;2180:17;;2099:108;2254:3;2251:1;2248:10;2286:1;2281:3;2278:10;2271:17;;2225:73;1155:1149;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "90600",
								"executionCost": "139",
								"totalCost": "90739"
							},
							"external": {
								"mostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1113,
									"end": 2306,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1113,
									"end": 2306,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f9cccb8c89874abcfa142460d70c145e218d691f27ab2d549e29a9f6758d8a864736f6c63430008140033",
									".code": [
										{
											"begin": 1113,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "E6BCBC65"
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 2306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1155,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1155,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1155,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1314,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1266,
											"end": 1315,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1341,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1415,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1471,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1466,
											"end": 1499,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1524,
											"end": 1525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1526,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1526,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1552,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1630,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1617,
											"end": 1618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1614,
											"end": 1631,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1611,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1607,
											"end": 1632,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1658,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1659,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1685,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1689,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1740,
											"end": 1761,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1788,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1811,
											"end": 1814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1818,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1886,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1869,
											"end": 1888,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1913,
											"end": 1914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1906,
											"end": 1915,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1915,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1945,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2012,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 2006,
											"end": 2007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2013,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2040,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2041,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2061,
											"end": 2071,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2054,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2054,
											"end": 2071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 2081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2138,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2132,
											"end": 2133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2129,
											"end": 2139,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2127,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2197,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2257,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2251,
											"end": 2252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/misc/assembly/MostSignificantBit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"mostSignificantBit(uint256)": "e6bcbc65"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"mostSignificantBit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"msb\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/assembly/MostSignificantBit.sol\":\"MostSignificantBitAssembly\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/misc/assembly/MostSignificantBit.sol\":{\"keccak256\":\"0x2b0b6478f21f6480df4ccd845d1fb4de54f0e7c88f144eb81af1d13d94a1bb1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d1153a39a799ede286f21bbcbcd1aff0232dd12051d78dca0f18d7de20ed76b\",\"dweb:/ipfs/QmUFzixgjG6VZiK5AEAbmQcgddLx2ytT1DMQvd949tVX4H\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MostSignificantBitFunction": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "mostSignificantBit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "msb",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/misc/assembly/MostSignificantBit.sol\":105:1111  contract MostSignificantBitFunction {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":105:1111  contract MostSignificantBitFunction {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xe6bcbc65\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":200:1109  function mostSignificantBit(uint x) external pure returns (uint msb) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":259:267  uint msb */\n      0x00\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":313:348  0x100000000000000000000000000000000 */\n      0x0100000000000000000000000000000000\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":308:309  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":308:348  x >= 0x100000000000000000000000000000000 */\n      lt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":304:408  if (x >= 0x100000000000000000000000000000000) {... */\n      tag_11\n      jumpi\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":370:373  128 */\n      0x80\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":364:373  x >>= 128 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":394:397  128 */\n      0x80\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":387:397  msb += 128 */\n      dup2\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      swap1\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":304:408  if (x >= 0x100000000000000000000000000000000) {... */\n    tag_11:\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":450:469  0x10000000000000000 */\n      0x010000000000000000\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":445:446  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":445:469  x >= 0x10000000000000000 */\n      lt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":441:527  if (x >= 0x10000000000000000) {... */\n      tag_14\n      jumpi\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":491:493  64 */\n      0x40\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":485:493  x >>= 64 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":514:516  64 */\n      0x40\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":507:516  msb += 64 */\n      dup2\n      tag_15\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_15:\n      swap1\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":441:527  if (x >= 0x10000000000000000) {... */\n    tag_14:\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":569:580  0x100000000 */\n      0x0100000000\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":564:565  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":564:580  x >= 0x100000000 */\n      lt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":560:638  if (x >= 0x100000000) {... */\n      tag_16\n      jumpi\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":602:604  32 */\n      0x20\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":596:604  x >>= 32 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":625:627  32 */\n      0x20\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":618:627  msb += 32 */\n      dup2\n      tag_17\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_17:\n      swap1\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":560:638  if (x >= 0x100000000) {... */\n    tag_16:\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":680:687  0x10000 */\n      0x010000\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":675:676  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":675:687  x >= 0x10000 */\n      lt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":671:745  if (x >= 0x10000) {... */\n      tag_18\n      jumpi\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":709:711  16 */\n      0x10\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":703:711  x >>= 16 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":732:734  16 */\n      0x10\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":725:734  msb += 16 */\n      dup2\n      tag_19\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_19:\n      swap1\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":671:745  if (x >= 0x10000) {... */\n    tag_18:\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":786:791  0x100 */\n      0x0100\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":781:782  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":781:791  x >= 0x100 */\n      lt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":777:847  if (x >= 0x100) {... */\n      tag_20\n      jumpi\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":813:814  8 */\n      0x08\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":807:814  x >>= 8 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":835:836  8 */\n      0x08\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":828:836  msb += 8 */\n      dup2\n      tag_21\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_21:\n      swap1\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":777:847  if (x >= 0x100) {... */\n    tag_20:\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":888:892  0x10 */\n      0x10\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":883:884  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":883:892  x >= 0x10 */\n      lt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":879:948  if (x >= 0x10) {... */\n      tag_22\n      jumpi\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":914:915  4 */\n      0x04\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":908:915  x >>= 4 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":936:937  4 */\n      0x04\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":929:937  msb += 4 */\n      dup2\n      tag_23\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_23:\n      swap1\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":879:948  if (x >= 0x10) {... */\n    tag_22:\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":989:992  0x4 */\n      0x04\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":984:985  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":984:992  x >= 0x4 */\n      lt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":980:1048  if (x >= 0x4) {... */\n      tag_24\n      jumpi\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1014:1015  2 */\n      0x02\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1008:1015  x >>= 2 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1036:1037  2 */\n      0x02\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1029:1037  msb += 2 */\n      dup2\n      tag_25\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_25:\n      swap1\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":980:1048  if (x >= 0x4) {... */\n    tag_24:\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1089:1092  0x2 */\n      0x02\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1084:1085  x */\n      dup3\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1084:1092  x >= 0x2 */\n      lt\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1080:1102  if (x >= 0x2) msb += 1 */\n      tag_26\n      jumpi\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1101:1102  1 */\n      0x01\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1094:1102  msb += 1 */\n      dup2\n      tag_27\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_27:\n      swap1\n      pop\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":1080:1102  if (x >= 0x2) msb += 1 */\n    tag_26:\n        /* \"contracts/misc/assembly/MostSignificantBit.sol\":200:1109  function mostSignificantBit(uint x) external pure returns (uint msb) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_29:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_31:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_32:\n        /* \"#utility.yul\":490:514   */\n      tag_42\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_31\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_43\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_43:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_33:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_45\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_32\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_6:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_48\n      tag_29\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":766:885   */\n    tag_47:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_49\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_33\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_34:\n        /* \"#utility.yul\":1112:1136   */\n      tag_51\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_31\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_9:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_53\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_34\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1557   */\n    tag_35:\n        /* \"#utility.yul\":1425:1502   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1422:1423   */\n      0x00\n        /* \"#utility.yul\":1415:1503   */\n      mstore\n        /* \"#utility.yul\":1522:1526   */\n      0x11\n        /* \"#utility.yul\":1519:1520   */\n      0x04\n        /* \"#utility.yul\":1512:1527   */\n      mstore\n        /* \"#utility.yul\":1546:1550   */\n      0x24\n        /* \"#utility.yul\":1543:1544   */\n      0x00\n        /* \"#utility.yul\":1536:1551   */\n      revert\n        /* \"#utility.yul\":1563:1754   */\n    tag_13:\n        /* \"#utility.yul\":1603:1606   */\n      0x00\n        /* \"#utility.yul\":1622:1642   */\n      tag_56\n        /* \"#utility.yul\":1640:1641   */\n      dup3\n        /* \"#utility.yul\":1622:1642   */\n      tag_31\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1617:1642   */\n      swap2\n      pop\n        /* \"#utility.yul\":1656:1676   */\n      tag_57\n        /* \"#utility.yul\":1674:1675   */\n      dup4\n        /* \"#utility.yul\":1656:1676   */\n      tag_31\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1651:1676   */\n      swap3\n      pop\n        /* \"#utility.yul\":1699:1700   */\n      dup3\n        /* \"#utility.yul\":1696:1697   */\n      dup3\n        /* \"#utility.yul\":1692:1701   */\n      add\n        /* \"#utility.yul\":1685:1701   */\n      swap1\n      pop\n        /* \"#utility.yul\":1720:1723   */\n      dup1\n        /* \"#utility.yul\":1717:1718   */\n      dup3\n        /* \"#utility.yul\":1714:1724   */\n      gt\n        /* \"#utility.yul\":1711:1747   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":1727:1745   */\n      tag_59\n      tag_35\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1711:1747   */\n    tag_58:\n        /* \"#utility.yul\":1563:1754   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122088024db93ba91cb967e346f8c5aadab857dc0c0b0789e89db81100e442a6609d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506102938061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063e6bcbc651461002d575b5f80fd5b610047600480360381019061004291906101aa565b61005d565b60405161005491906101e4565b60405180910390f35b5f700100000000000000000000000000000000821061008d57608082901c915060808161008a919061022a565b90505b6801000000000000000082106100b457604082901c91506040816100b1919061022a565b90505b64010000000082106100d757602082901c91506020816100d4919061022a565b90505b6201000082106100f857601082901c91506010816100f5919061022a565b90505b610100821061011857600882901c9150600881610115919061022a565b90505b6010821061013757600482901c9150600481610134919061022a565b90505b6004821061015657600282901c9150600281610153919061022a565b90505b6002821061016e5760018161016b919061022a565b90505b919050565b5f80fd5b5f819050919050565b61018981610177565b8114610193575f80fd5b50565b5f813590506101a481610180565b92915050565b5f602082840312156101bf576101be610173565b5b5f6101cc84828501610196565b91505092915050565b6101de81610177565b82525050565b5f6020820190506101f75f8301846101d5565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61023482610177565b915061023f83610177565b9250828201905080821115610257576102566101fd565b5b9291505056fea264697066735822122088024db93ba91cb967e346f8c5aadab857dc0c0b0789e89db81100e442a6609d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE6BCBC65 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x1AA JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x8D JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x80 DUP2 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0xB4 JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0xD7 JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0xF8 JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x118 JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x137 JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x156 JUMPI PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x16E JUMPI PUSH1 0x1 DUP2 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189 DUP2 PUSH2 0x177 JUMP JUMPDEST DUP2 EQ PUSH2 0x193 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A4 DUP2 PUSH2 0x180 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF JUMPI PUSH2 0x1BE PUSH2 0x173 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CC DUP5 DUP3 DUP6 ADD PUSH2 0x196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DE DUP2 PUSH2 0x177 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x234 DUP3 PUSH2 0x177 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F DUP4 PUSH2 0x177 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x257 JUMPI PUSH2 0x256 PUSH2 0x1FD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 MUL 0x4D 0xB9 EXTCODESIZE 0xA9 SHR 0xB9 PUSH8 0xE346F8C5AADAB857 0xDC 0xC SIGNEXTEND SMOD DUP10 0xE8 SWAP14 0xB8 GT STOP 0xE4 TIMESTAMP 0xA6 PUSH1 0x9D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "105:1006:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@mostSignificantBit_108": {
									"entryPoint": 93,
									"id": 108,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1757:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:1",
														"type": ""
													}
												],
												"src": "1025:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													}
												],
												"src": "1149:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1405:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1425:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1415:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1415:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1519:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1522:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1512:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1512:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1546:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1536:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1377:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1607:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1617:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1640:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1622:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1622:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1617:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1651:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1674:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1656:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1656:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1651:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1685:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1696:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1692:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1692:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1685:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1725:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1727:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1727:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1727:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1717:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "1720:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1714:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1714:10:1"
															},
															"nodeType": "YulIf",
															"src": "1711:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1594:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1597:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1603:3:1",
														"type": ""
													}
												],
												"src": "1563:191:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063e6bcbc651461002d575b5f80fd5b610047600480360381019061004291906101aa565b61005d565b60405161005491906101e4565b60405180910390f35b5f700100000000000000000000000000000000821061008d57608082901c915060808161008a919061022a565b90505b6801000000000000000082106100b457604082901c91506040816100b1919061022a565b90505b64010000000082106100d757602082901c91506020816100d4919061022a565b90505b6201000082106100f857601082901c91506010816100f5919061022a565b90505b610100821061011857600882901c9150600881610115919061022a565b90505b6010821061013757600482901c9150600481610134919061022a565b90505b6004821061015657600282901c9150600281610153919061022a565b90505b6002821061016e5760018161016b919061022a565b90505b919050565b5f80fd5b5f819050919050565b61018981610177565b8114610193575f80fd5b50565b5f813590506101a481610180565b92915050565b5f602082840312156101bf576101be610173565b5b5f6101cc84828501610196565b91505092915050565b6101de81610177565b82525050565b5f6020820190506101f75f8301846101d5565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61023482610177565b915061023f83610177565b9250828201905080821115610257576102566101fd565b5b9291505056fea264697066735822122088024db93ba91cb967e346f8c5aadab857dc0c0b0789e89db81100e442a6609d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE6BCBC65 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x1AA JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x8D JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x80 DUP2 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0xB4 JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0xD7 JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0xF8 JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x118 JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x137 JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x156 JUMPI PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x16E JUMPI PUSH1 0x1 DUP2 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189 DUP2 PUSH2 0x177 JUMP JUMPDEST DUP2 EQ PUSH2 0x193 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A4 DUP2 PUSH2 0x180 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF JUMPI PUSH2 0x1BE PUSH2 0x173 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CC DUP5 DUP3 DUP6 ADD PUSH2 0x196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DE DUP2 PUSH2 0x177 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x234 DUP3 PUSH2 0x177 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F DUP4 PUSH2 0x177 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x257 JUMPI PUSH2 0x256 PUSH2 0x1FD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 MUL 0x4D 0xB9 EXTCODESIZE 0xA9 SHR 0xB9 PUSH8 0xE346F8C5AADAB857 0xDC 0xC SIGNEXTEND SMOD DUP10 0xE8 SWAP14 0xB8 GT STOP 0xE4 TIMESTAMP 0xA6 PUSH1 0x9D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "105:1006:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;200:909;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;259:8;313:35;308:1;:40;304:104;;370:3;364:9;;;;;394:3;387:10;;;;;:::i;:::-;;;304:104;450:19;445:1;:24;441:86;;491:2;485:8;;;;;514:2;507:9;;;;;:::i;:::-;;;441:86;569:11;564:1;:16;560:78;;602:2;596:8;;;;;625:2;618:9;;;;;:::i;:::-;;;560:78;680:7;675:1;:12;671:74;;709:2;703:8;;;;;732:2;725:9;;;;;:::i;:::-;;;671:74;786:5;781:1;:10;777:70;;813:1;807:7;;;;;835:1;828:8;;;;;:::i;:::-;;;777:70;888:4;883:1;:9;879:69;;914:1;908:7;;;;;936:1;929:8;;;;;:::i;:::-;;;879:69;989:3;984:1;:8;980:68;;1014:1;1008:7;;;;;1036:1;1029:8;;;;;:::i;:::-;;;980:68;1089:3;1084:1;:8;1080:22;;1101:1;1094:8;;;;;:::i;:::-;;;1080:22;200:909;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:180::-;1425:77;1422:1;1415:88;1522:4;1519:1;1512:15;1546:4;1543:1;1536:15;1563:191;1603:3;1622:20;1640:1;1622:20;:::i;:::-;1617:25;;1656:20;1674:1;1656:20;:::i;:::-;1651:25;;1699:1;1696;1692:9;1685:16;;1720:3;1717:1;1714:10;1711:36;;;1727:18;;:::i;:::-;1711:36;1563:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "131800",
								"executionCost": "175",
								"totalCost": "131975"
							},
							"external": {
								"mostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 105,
									"end": 1111,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 105,
									"end": 1111,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088024db93ba91cb967e346f8c5aadab857dc0c0b0789e89db81100e442a6609d64736f6c63430008140033",
									".code": [
										{
											"begin": 105,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "E6BCBC65"
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 105,
											"end": 1111,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 200,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 200,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 200,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 259,
											"end": 267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 308,
											"end": 309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 308,
											"end": 348,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 304,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 304,
											"end": 408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 373,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 364,
											"end": 373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 364,
											"end": 373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 373,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 364,
											"end": 373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 387,
											"end": 397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 387,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 387,
											"end": 397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 387,
											"end": 397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 387,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 387,
											"end": 397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 387,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 387,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 387,
											"end": 397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 387,
											"end": 397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 408,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 304,
											"end": 408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 450,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000"
										},
										{
											"begin": 445,
											"end": 446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 445,
											"end": 469,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 441,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 441,
											"end": 527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 491,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 485,
											"end": 493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 485,
											"end": 493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 485,
											"end": 493,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 485,
											"end": 493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 485,
											"end": 493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 514,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 507,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 507,
											"end": 516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 507,
											"end": 516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 507,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 507,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 516,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 507,
											"end": 516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 507,
											"end": 516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 507,
											"end": 516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 441,
											"end": 527,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 441,
											"end": 527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 569,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 564,
											"end": 565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 564,
											"end": 580,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 560,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 560,
											"end": 638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 596,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 596,
											"end": 604,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 596,
											"end": 604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 596,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 625,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 618,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 618,
											"end": 627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 618,
											"end": 627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 618,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 618,
											"end": 627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 618,
											"end": 627,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 618,
											"end": 627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 618,
											"end": 627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 618,
											"end": 627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 638,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 560,
											"end": 638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 675,
											"end": 676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 675,
											"end": 687,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 671,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 671,
											"end": 745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 709,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 703,
											"end": 711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 703,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 711,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 703,
											"end": 711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 703,
											"end": 711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 725,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 725,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 725,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 725,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 725,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 725,
											"end": 734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 725,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 725,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 725,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 725,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 671,
											"end": 745,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 671,
											"end": 745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 786,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 781,
											"end": 782,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 781,
											"end": 791,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 777,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 807,
											"end": 814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 807,
											"end": 814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 807,
											"end": 814,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 807,
											"end": 814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 807,
											"end": 814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 835,
											"end": 836,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 828,
											"end": 836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 828,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 828,
											"end": 836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 828,
											"end": 836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 828,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 828,
											"end": 836,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 828,
											"end": 836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 828,
											"end": 836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 847,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 883,
											"end": 884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 883,
											"end": 892,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 879,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 879,
											"end": 948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 914,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 908,
											"end": 915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 908,
											"end": 915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 908,
											"end": 915,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 908,
											"end": 915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 908,
											"end": 915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 936,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 929,
											"end": 937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 929,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 929,
											"end": 937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 929,
											"end": 937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 929,
											"end": 937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 929,
											"end": 937,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 929,
											"end": 937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 879,
											"end": 948,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 879,
											"end": 948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 989,
											"end": 992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 984,
											"end": 985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 984,
											"end": 992,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 980,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 980,
											"end": 1048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1015,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1008,
											"end": 1015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1015,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1029,
											"end": 1037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1029,
											"end": 1037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1029,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1037,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1029,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 980,
											"end": 1048,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 980,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1092,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1084,
											"end": 1085,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1092,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1094,
											"end": 1102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1094,
											"end": 1102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1094,
											"end": 1102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1102,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1094,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 1109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1557,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1377,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1502,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1519,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 1527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1550,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1543,
											"end": 1544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1551,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1754,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1563,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1622,
											"end": 1642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1642,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1622,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1656,
											"end": 1676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1676,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1656,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1676,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1747,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1711,
											"end": 1747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1727,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1747,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1711,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1754,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1754,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/misc/assembly/MostSignificantBit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"mostSignificantBit(uint256)": "e6bcbc65"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"mostSignificantBit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"msb\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/assembly/MostSignificantBit.sol\":\"MostSignificantBitFunction\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/misc/assembly/MostSignificantBit.sol\":{\"keccak256\":\"0x2b0b6478f21f6480df4ccd845d1fb4de54f0e7c88f144eb81af1d13d94a1bb1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d1153a39a799ede286f21bbcbcd1aff0232dd12051d78dca0f18d7de20ed76b\",\"dweb:/ipfs/QmUFzixgjG6VZiK5AEAbmQcgddLx2ytT1DMQvd949tVX4H\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/misc/assembly/MostSignificantBit.sol": {
				"ast": {
					"absolutePath": "contracts/misc/assembly/MostSignificantBit.sol",
					"exportedSymbols": {
						"MostSignificantBitAssembly": [
							126
						],
						"MostSignificantBitFunction": [
							109
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MostSignificantBitFunction",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109
							],
							"name": "MostSignificantBitFunction",
							"nameLocation": "114:26:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "269:840:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "308:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "313:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"src": "308:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 20,
												"nodeType": "IfStatement",
												"src": "304:104:0",
												"trueBody": {
													"id": 19,
													"nodeType": "Block",
													"src": "350:58:0",
													"statements": [
														{
															"expression": {
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 11,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "364:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 12,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "370:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "364:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 14,
															"nodeType": "ExpressionStatement",
															"src": "364:9:0"
														},
														{
															"expression": {
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 15,
																	"name": "msb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "387:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 16,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "394:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "387:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 18,
															"nodeType": "ExpressionStatement",
															"src": "387:10:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 21,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "445:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030303030303030303030303030",
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "450:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"value": "0x10000000000000000"
													},
													"src": "445:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 33,
												"nodeType": "IfStatement",
												"src": "441:86:0",
												"trueBody": {
													"id": 32,
													"nodeType": "Block",
													"src": "471:56:0",
													"statements": [
														{
															"expression": {
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 24,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "485:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "491:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "485:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 27,
															"nodeType": "ExpressionStatement",
															"src": "485:8:0"
														},
														{
															"expression": {
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 28,
																	"name": "msb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "507:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "514:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "507:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 31,
															"nodeType": "ExpressionStatement",
															"src": "507:9:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 34,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "564:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030",
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "569:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"value": "0x100000000"
													},
													"src": "564:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 46,
												"nodeType": "IfStatement",
												"src": "560:78:0",
												"trueBody": {
													"id": 45,
													"nodeType": "Block",
													"src": "582:56:0",
													"statements": [
														{
															"expression": {
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 37,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "596:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "602:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "596:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 40,
															"nodeType": "ExpressionStatement",
															"src": "596:8:0"
														},
														{
															"expression": {
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 41,
																	"name": "msb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "618:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "625:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "618:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 44,
															"nodeType": "ExpressionStatement",
															"src": "618:9:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 47,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "675:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030",
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "680:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"value": "0x10000"
													},
													"src": "675:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 59,
												"nodeType": "IfStatement",
												"src": "671:74:0",
												"trueBody": {
													"id": 58,
													"nodeType": "Block",
													"src": "689:56:0",
													"statements": [
														{
															"expression": {
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 50,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "703:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 51,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "709:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "703:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 53,
															"nodeType": "ExpressionStatement",
															"src": "703:8:0"
														},
														{
															"expression": {
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 54,
																	"name": "msb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "725:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "732:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "725:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 57,
															"nodeType": "ExpressionStatement",
															"src": "725:9:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 60,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "781:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "786:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "0x100"
													},
													"src": "781:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 72,
												"nodeType": "IfStatement",
												"src": "777:70:0",
												"trueBody": {
													"id": 71,
													"nodeType": "Block",
													"src": "793:54:0",
													"statements": [
														{
															"expression": {
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 63,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "807:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "807:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 66,
															"nodeType": "ExpressionStatement",
															"src": "807:7:0"
														},
														{
															"expression": {
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 67,
																	"name": "msb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "828:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "835:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "828:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 70,
															"nodeType": "ExpressionStatement",
															"src": "828:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 73,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "883:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130",
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "888:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "0x10"
													},
													"src": "883:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 85,
												"nodeType": "IfStatement",
												"src": "879:69:0",
												"trueBody": {
													"id": 84,
													"nodeType": "Block",
													"src": "894:54:0",
													"statements": [
														{
															"expression": {
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 76,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "908:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "914:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "908:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 79,
															"nodeType": "ExpressionStatement",
															"src": "908:7:0"
														},
														{
															"expression": {
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 80,
																	"name": "msb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "929:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 81,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "936:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "929:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 83,
															"nodeType": "ExpressionStatement",
															"src": "929:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 86,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "984:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307834",
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "989:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "0x4"
													},
													"src": "984:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 98,
												"nodeType": "IfStatement",
												"src": "980:68:0",
												"trueBody": {
													"id": 97,
													"nodeType": "Block",
													"src": "994:54:0",
													"statements": [
														{
															"expression": {
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 89,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "1008:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 90,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1014:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1008:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 92,
															"nodeType": "ExpressionStatement",
															"src": "1008:7:0"
														},
														{
															"expression": {
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 93,
																	"name": "msb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "1029:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 94,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1036:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1029:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 96,
															"nodeType": "ExpressionStatement",
															"src": "1029:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 99,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1084:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307832",
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1089:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "0x2"
													},
													"src": "1084:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 106,
												"nodeType": "IfStatement",
												"src": "1080:22:0",
												"trueBody": {
													"expression": {
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 102,
															"name": "msb",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "1094:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1101:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1094:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 105,
													"nodeType": "ExpressionStatement",
													"src": "1094:8:0"
												}
											}
										]
									},
									"functionSelector": "e6bcbc65",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nameLocation": "209:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "233:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "228:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "228:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "227:8:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "msb",
												"nameLocation": "264:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "259:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "259:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:10:0"
									},
									"scope": 109,
									"src": "200:909:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 127,
							"src": "105:1006:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MostSignificantBitAssembly",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "MostSignificantBitAssembly",
							"nameLocation": "1122:26:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "1224:1080:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1243:182:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1257:58:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1270:1:0",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "1276:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1279:34:0",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1273:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1273:41:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1266:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:49:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "1261:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1328:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "1337:1:0"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1340:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1333:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1333:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1328:1:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1398:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "1408:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "1413:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1405:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1405:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "1398:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "1398:3:0",
														"valueSize": 1
													},
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "1408:3:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "1276:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "1328:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "1340:1:0",
														"valueSize": 1
													}
												],
												"id": 116,
												"nodeType": "InlineAssembly",
												"src": "1234:191:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1443:123:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1457:42:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1470:1:0",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "1476:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1479:18:0",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1473:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:25:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1466:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:33:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "1461:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1512:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "1521:1:0"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1524:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1517:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1512:1:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1539:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "1549:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "1554:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "1539:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "1539:3:0",
														"valueSize": 1
													},
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "1549:3:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "1476:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "1512:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "1524:1:0",
														"valueSize": 1
													}
												],
												"id": 117,
												"nodeType": "InlineAssembly",
												"src": "1434:132:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1584:115:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1598:34:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1611:1:0",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "1617:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1620:10:0",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1614:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1614:17:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1607:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1607:25:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "1602:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1645:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "1654:1:0"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1657:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1650:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1645:1:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1672:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "1682:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "1687:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1679:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "1672:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "1672:3:0",
														"valueSize": 1
													},
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "1682:3:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "1617:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "1645:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "1657:1:0",
														"valueSize": 1
													}
												],
												"id": 118,
												"nodeType": "InlineAssembly",
												"src": "1575:124:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1717:111:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1731:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1744:1:0",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "1750:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1753:6:0",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1747:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1747:13:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1740:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1740:21:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "1735:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1774:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "1783:1:0"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1786:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1779:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1779:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1774:1:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1801:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "1811:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1808:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "1801:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "1801:3:0",
														"valueSize": 1
													},
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "1811:3:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "1750:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "1774:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "1786:1:0",
														"valueSize": 1
													}
												],
												"id": 119,
												"nodeType": "InlineAssembly",
												"src": "1708:120:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1846:109:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1860:28:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1873:1:0",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "1879:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1882:4:0",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1876:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1876:11:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1869:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:19:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "1864:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1901:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "1910:1:0"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1913:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1906:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1901:1:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1928:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "1938:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "1943:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1935:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "1928:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "1928:3:0",
														"valueSize": 1
													},
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "1938:3:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "1879:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "1901:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "1913:1:0",
														"valueSize": 1
													}
												],
												"id": 120,
												"nodeType": "InlineAssembly",
												"src": "1837:118:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1973:108:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1987:27:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2000:1:0",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2006:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2009:3:0",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2003:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2003:10:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1996:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1996:18:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "1991:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2027:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "2036:1:0"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2039:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2027:1:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2054:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "2064:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "2069:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2061:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "2054:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "2054:3:0",
														"valueSize": 1
													},
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:3:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "2006:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "2027:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "2039:1:0",
														"valueSize": 1
													}
												],
												"id": 121,
												"nodeType": "InlineAssembly",
												"src": "1964:117:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2099:108:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2113:27:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2126:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2132:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2135:3:0",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2129:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2129:10:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2122:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2122:18:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "2117:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2153:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "2162:1:0"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2165:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2158:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2158:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2153:1:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2180:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "2190:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "2195:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2187:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2187:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "2180:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "2180:3:0",
														"valueSize": 1
													},
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "2190:3:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "2132:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "2153:1:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "2165:1:0",
														"valueSize": 1
													}
												],
												"id": 122,
												"nodeType": "InlineAssembly",
												"src": "2090:117:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2225:73:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2239:19:0",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2251:1:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2254:3:0",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2248:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:10:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "2243:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2271:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "2286:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2278:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "2271:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "2271:3:0",
														"valueSize": 1
													},
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "2281:3:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "2251:1:0",
														"valueSize": 1
													}
												],
												"id": 123,
												"nodeType": "InlineAssembly",
												"src": "2216:82:0"
											}
										]
									},
									"functionSelector": "e6bcbc65",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nameLocation": "1164:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1188:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1183:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1183:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:8:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "msb",
												"nameLocation": "1219:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1214:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1214:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:10:0"
									},
									"scope": 126,
									"src": "1155:1149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 127,
							"src": "1113:1193:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2275:0"
				},
				"id": 0
			}
		}
	}
}