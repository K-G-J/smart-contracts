{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "vrfCoordinatorV2",
						"type": "address"
					},
					{
						"internalType": "uint64",
						"name": "subscriptionId",
						"type": "uint64"
					},
					{
						"internalType": "bytes32",
						"name": "gasLane",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "entranceFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "jackpot",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "duration",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "callbackGasLimit",
						"type": "uint32"
					},
					{
						"internalType": "address",
						"name": "charity1",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "charity2",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "charity3",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "fundingWallet",
						"type": "address"
					}
				],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "charity",
						"type": "address"
					}
				],
				"name": "CharityRaffle__CharityTransferFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CharityRaffle__ContractNotFunded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CharityRaffle__DonationMatchFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CharityRaffle__FundingContractFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CharityRaffle__FundingToMatchTransferFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CharityRaffle__IncorrectMatchValue",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CharityRaffle__JackpotTransferFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CharityRaffle__MatchAlreadyFunded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CharityRaffle__MustBeFunder",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CharityRaffle__NoCharityWinner",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CharityRaffle__NotValidCharityChoice",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CharityRaffle__RaffleNotClosed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CharityRaffle__RaffleNotOpen",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CharityRaffle__SendMoreToEnterRaffle",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "currentBalance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "numPlayers",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "raffleState",
						"type": "uint256"
					}
				],
				"name": "CharityRaffle__UpkeepNotNeeded",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "have",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "want",
						"type": "address"
					}
				],
				"name": "OnlyCoordinatorCanFulfill",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "charity",
						"type": "address"
					}
				],
				"name": "CharityWinnerPicked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "player",
						"type": "address"
					}
				],
				"name": "RaffleEnter",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					}
				],
				"name": "RequestedRaffleWinner",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "player",
						"type": "address"
					}
				],
				"name": "WinnerPicked",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "checkUpkeep",
				"outputs": [
					{
						"internalType": "bool",
						"name": "upkeepNeeded",
						"type": "bool"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "donationMatch",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "charityChoice",
						"type": "uint256"
					}
				],
				"name": "enterRaffle",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fundDonationMatch",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllPlayers",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCharities",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCharityWinner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "charity",
						"type": "address"
					}
				],
				"name": "getDonations",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getDuration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getEntranceFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFundingWallet",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getHighestDonations",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getJackpot",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumWords",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumberOfPlayers",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getPlayer",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getRaffleState",
				"outputs": [
					{
						"internalType": "enum CharityRaffle.RaffleState",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getRecentWinner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getRequestConfirmations",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getStartTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "performUpkeep",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "randomWords",
						"type": "uint256[]"
					}
				],
				"name": "rawFulfillRandomWords",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"details": "This implements the Chainlink VRF Version 2",
			"kind": "dev",
			"methods": {},
			"title": "A sample Charity Raffle Contract originally @author Patrick Collins",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getRaffleState()": {
					"notice": "Getter Functions "
				}
			},
			"notice": "This contract creates a lottery in which players enter by donating to 1 of 3 charities",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/misc/CharityRaffle.sol": "CharityRaffle"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol": {
			"keccak256": "0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904",
			"license": "MIT",
			"urls": [
				"bzz-raw://038eef992d813c20737fbe94e3a36e5d541d1aa736158dd2a43dd5b840b8c360",
				"dweb:/ipfs/QmZWJ25Yr1sUSAsfJRKvTMDmGkmy63hHhB495CUL1bpNz4"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol": {
			"keccak256": "0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea",
			"license": "MIT",
			"urls": [
				"bzz-raw://a27100d0f91626ace3dd6912d41033a9bba43ea31b5e17f3d847fef1155398a4",
				"dweb:/ipfs/QmepkhmjCMnyPF166QcNEojmc1ZeSNPRs619r5GpU1YRPn"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
			"keccak256": "0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802",
			"license": "MIT",
			"urls": [
				"bzz-raw://87b4f2ac9fe4e83334c0cc7b070989f133647f20c2b2e8f2224e10d37bebc6df",
				"dweb:/ipfs/QmYS2z7xmTArVpxiNM8Czj1qKL56HMw61Lzdjto9m3B5PL"
			]
		},
		"contracts/misc/CharityRaffle.sol": {
			"keccak256": "0x60d12a1fa14721ed65f037072e60bde1333644ee943308007320e8d857cba39f",
			"license": "MIT",
			"urls": [
				"bzz-raw://ab42415e28a53d6997a2026a5b787471986fd54d76176df9eebb4ba93ab008e1",
				"dweb:/ipfs/Qmbr91N27FRnP4BmZEuRhCpMKUfyPHQg9u1FX6mRPoPPBv"
			]
		},
		"hardhat/console.sol": {
			"keccak256": "0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4",
			"license": "MIT",
			"urls": [
				"bzz-raw://a8cb8681076e765c214e0d51cac989325f6b98e315eaae06ee0cbd5a9f084763",
				"dweb:/ipfs/QmNWGHi4zmjxQTYN3NMGnJd49jBT5dE4bxTdWEaDuJrC6N"
			]
		}
	},
	"version": 1
}