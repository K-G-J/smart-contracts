{
	"id": "d3efd87d6c8799fe351826e421ba99b1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DeFi/DeFiStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Inspired by https://solidity-by-example.org/defi/staking-rewards/\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nerror TransferFailed();\nerror NeedsMoreThanZero();\n\ncontract Staking is ReentrancyGuard {\n    IERC20 public s_rewardsToken;\n    IERC20 public s_stakingToken;\n\n    // This is the reward token per second\n    // Which will be multiplied by the tokens the user staked divided by the total\n    // This ensures a steady reward rate of the platform\n    // So the more users stake, the less for everyone who is staking.\n    uint256 public constant REWARD_RATE = 100;\n    uint256 public s_lastUpdateTime;\n    uint256 public s_rewardPerTokenStored;\n\n    mapping(address => uint256) public s_userRewardPerTokenPaid;\n    mapping(address => uint256) public s_rewards;\n\n    uint256 private s_totalSupply;\n    mapping(address => uint256) public s_balances;\n\n    event Staked(address indexed user, uint256 indexed amount);\n    event WithdrewStake(address indexed user, uint256 indexed amount);\n    event RewardsClaimed(address indexed user, uint256 indexed amount);\n\n    constructor(address stakingToken, address rewardsToken) {\n        s_stakingToken = IERC20(stakingToken);\n        s_rewardsToken = IERC20(rewardsToken);\n    }\n\n    /**\n     * @notice How much reward a token gets based on how long it's been in and during which \"snapshots\"\n     */\n    function rewardPerToken() public view returns (uint256) {\n        if (s_totalSupply == 0) {\n            return s_rewardPerTokenStored;\n        }\n        return\n            s_rewardPerTokenStored +\n            (((block.timestamp - s_lastUpdateTime) * REWARD_RATE * 1e18) / s_totalSupply);\n    }\n\n    /**\n     * @notice How much reward a user has earned\n     */\n    function earned(address account) public view returns (uint256) {\n        return\n            ((s_balances[account] * (rewardPerToken() - s_userRewardPerTokenPaid[account])) /\n                1e18) + s_rewards[account];\n    }\n\n    /**\n     * @notice Deposit tokens into this contract\n     * @param amount | How much to stake\n     */\n    function stake(uint256 amount)\n        external\n        updateReward(msg.sender)\n        nonReentrant\n        moreThanZero(amount)\n    {\n        s_totalSupply += amount;\n        s_balances[msg.sender] += amount;\n        emit Staked(msg.sender, amount);\n        bool success = s_stakingToken.transferFrom(msg.sender, address(this), amount);\n        if (!success) {\n            revert TransferFailed();\n        }\n    }\n\n    /**\n     * @notice Withdraw tokens from this contract\n     * @param amount | How much to withdraw\n     */\n    function withdraw(uint256 amount) external updateReward(msg.sender) nonReentrant {\n        s_totalSupply -= amount;\n        s_balances[msg.sender] -= amount;\n        emit WithdrewStake(msg.sender, amount);\n        bool success = s_stakingToken.transfer(msg.sender, amount);\n        if (!success) {\n            revert TransferFailed();\n        }\n    }\n\n    /**\n     * @notice User claims their tokens\n     */\n    function claimReward() external updateReward(msg.sender) nonReentrant {\n        uint256 reward = s_rewards[msg.sender];\n        s_rewards[msg.sender] = 0;\n        emit RewardsClaimed(msg.sender, reward);\n        bool success = s_rewardsToken.transfer(msg.sender, reward);\n        if (!success) {\n            revert TransferFailed();\n        }\n    }\n\n    /********************/\n    /* Modifiers Functions */\n    /********************/\n    modifier updateReward(address account) {\n        s_rewardPerTokenStored = rewardPerToken();\n        s_lastUpdateTime = block.timestamp;\n        s_rewards[account] = earned(account);\n        s_userRewardPerTokenPaid[account] = s_rewardPerTokenStored;\n        _;\n    }\n\n    modifier moreThanZero(uint256 amount) {\n        if (amount == 0) {\n            revert NeedsMoreThanZero();\n        }\n        _;\n    }\n\n    /********************/\n    /* Getter Functions */\n    /********************/\n\n    function getStaked(address account) public view returns (uint256) {\n        return s_balances[account];\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DeFi/DeFiStaking.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "NeedsMoreThanZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrewStake",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "REWARD_RATE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"stake(uint256)": {
								"params": {
									"amount": "| How much to stake"
								}
							},
							"withdraw(uint256)": {
								"params": {
									"amount": "| How much to withdraw"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DeFi/DeFiStaking.sol\":299:4170  contract Staking is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DeFi/DeFiStaking.sol\":1202:1359  constructor(address stakingToken, address rewardsToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DeFi/DeFiStaking.sol\":1292:1304  stakingToken */\n  dup2\n    /* \"contracts/DeFi/DeFiStaking.sol\":1268:1282  s_stakingToken */\n  0x02\n  0x00\n    /* \"contracts/DeFi/DeFiStaking.sol\":1268:1305  s_stakingToken = IERC20(stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DeFi/DeFiStaking.sol\":1339:1351  rewardsToken */\n  dup1\n    /* \"contracts/DeFi/DeFiStaking.sol\":1315:1329  s_rewardsToken */\n  0x01\n  0x00\n    /* \"contracts/DeFi/DeFiStaking.sol\":1315:1352  s_rewardsToken = IERC20(rewardsToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DeFi/DeFiStaking.sol\":1202:1359  constructor(address stakingToken, address rewardsToken) {... */\n  pop\n  pop\n    /* \"contracts/DeFi/DeFiStaking.sol\":299:4170  contract Staking is ReentrancyGuard {... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:150   */\ntag_10:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_12\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:663   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:379   */\n  iszero\n  tag_15\n  jumpi\n    /* \"#utility.yul\":298:377   */\n  tag_16\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":260:379   */\ntag_15:\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":443:507   */\n  tag_18\n    /* \"#utility.yul\":499:506   */\n  dup6\n    /* \"#utility.yul\":490:496   */\n  dup3\n    /* \"#utility.yul\":479:488   */\n  dup7\n    /* \"#utility.yul\":475:497   */\n  add\n    /* \"#utility.yul\":443:507   */\n  tag_10\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":433:507   */\n  swap3\n  pop\n    /* \"#utility.yul\":389:517   */\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":582:646   */\n  tag_19\n    /* \"#utility.yul\":638:645   */\n  dup6\n    /* \"#utility.yul\":629:635   */\n  dup3\n    /* \"#utility.yul\":618:627   */\n  dup7\n    /* \"#utility.yul\":614:636   */\n  add\n    /* \"#utility.yul\":582:646   */\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":572:646   */\n  swap2\n  pop\n    /* \"#utility.yul\":527:656   */\n  pop\n    /* \"#utility.yul\":156:663   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":750:846   */\ntag_22:\n    /* \"#utility.yul\":787:794   */\n  0x00\n    /* \"#utility.yul\":816:840   */\n  tag_24\n    /* \"#utility.yul\":834:839   */\n  dup3\n    /* \"#utility.yul\":816:840   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":805:840   */\n  swap1\n  pop\n    /* \"#utility.yul\":750:846   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":852:978   */\ntag_25:\n    /* \"#utility.yul\":889:896   */\n  0x00\n    /* \"#utility.yul\":929:971   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":922:927   */\n  dup3\n    /* \"#utility.yul\":918:972   */\n  and\n    /* \"#utility.yul\":907:972   */\n  swap1\n  pop\n    /* \"#utility.yul\":852:978   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1107:1224   */\ntag_17:\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1213:1214   */\n  dup1\n    /* \"#utility.yul\":1206:1218   */\n  revert\n    /* \"#utility.yul\":1230:1352   */\ntag_13:\n    /* \"#utility.yul\":1303:1327   */\n  tag_31\n    /* \"#utility.yul\":1321:1326   */\n  dup2\n    /* \"#utility.yul\":1303:1327   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1296:1301   */\n  dup2\n    /* \"#utility.yul\":1293:1328   */\n  eq\n    /* \"#utility.yul\":1283:1346   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1342:1343   */\n  0x00\n    /* \"#utility.yul\":1339:1340   */\n  dup1\n    /* \"#utility.yul\":1332:1344   */\n  revert\n    /* \"#utility.yul\":1283:1346   */\ntag_32:\n    /* \"#utility.yul\":1230:1352   */\n  pop\n  jump\t// out\n    /* \"contracts/DeFi/DeFiStaking.sol\":299:4170  contract Staking is ReentrancyGuard {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DeFi/DeFiStaking.sol\":299:4170  contract Staking is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa694fc3a\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb88a802f\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbea08151\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf245ace4\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0xa694fc3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xab32eb69\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xadca9b72\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x304ac91b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x304ac91b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x399080ec\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5997bb37\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6aa0838f\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0bd21c56\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DeFi/DeFiStaking.sol\":1849:2072  function earned(address account) public view returns (uint256) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFi/DeFiStaking.sol\":341:369  IERC20 public s_rewardsToken */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFi/DeFiStaking.sol\":2716:3066  function withdraw(uint256 amount) external updateReward(msg.sender) nonReentrant {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/DeFi/DeFiStaking.sol\":747:784  uint256 public s_rewardPerTokenStored */\n    tag_6:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFi/DeFiStaking.sol\":4059:4168  function getStaked(address account) public view returns (uint256) {... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFi/DeFiStaking.sol\":663:704  uint256 public constant REWARD_RATE = 100 */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFi/DeFiStaking.sol\":710:741  uint256 public s_lastUpdateTime */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFi/DeFiStaking.sol\":2184:2600  function stake(uint256 amount)... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/DeFi/DeFiStaking.sol\":942:987  mapping(address => uint256) public s_balances */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFi/DeFiStaking.sol\":375:403  IERC20 public s_stakingToken */\n    tag_12:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFi/DeFiStaking.sol\":3128:3476  function claimReward() external updateReward(msg.sender) nonReentrant {... */\n    tag_13:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/DeFi/DeFiStaking.sol\":856:900  mapping(address => uint256) public s_rewards */\n    tag_14:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFi/DeFiStaking.sol\":1485:1778  function rewardPerToken() public view returns (uint256) {... */\n    tag_15:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFi/DeFiStaking.sol\":791:850  mapping(address => uint256) public s_userRewardPerTokenPaid */\n    tag_16:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeFi/DeFiStaking.sol\":1849:2072  function earned(address account) public view returns (uint256) {... */\n    tag_23:\n        /* \"contracts/DeFi/DeFiStaking.sol\":1903:1910  uint256 */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":2047:2056  s_rewards */\n      0x06\n        /* \"contracts/DeFi/DeFiStaking.sol\":2047:2065  s_rewards[account] */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":2057:2064  account */\n      dup4\n        /* \"contracts/DeFi/DeFiStaking.sol\":2047:2065  s_rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DeFi/DeFiStaking.sol\":2039:2043  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/DeFi/DeFiStaking.sol\":1985:2009  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/DeFi/DeFiStaking.sol\":1985:2018  s_userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":2010:2017  account */\n      dup6\n        /* \"contracts/DeFi/DeFiStaking.sol\":1985:2018  s_userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DeFi/DeFiStaking.sol\":1966:1982  rewardPerToken() */\n      tag_71\n        /* \"contracts/DeFi/DeFiStaking.sol\":1966:1980  rewardPerToken */\n      tag_64\n        /* \"contracts/DeFi/DeFiStaking.sol\":1966:1982  rewardPerToken() */\n      jump\t// in\n    tag_71:\n        /* \"contracts/DeFi/DeFiStaking.sol\":1966:2018  rewardPerToken() - s_userRewardPerTokenPaid[account] */\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"contracts/DeFi/DeFiStaking.sol\":1943:1953  s_balances */\n      0x08\n        /* \"contracts/DeFi/DeFiStaking.sol\":1943:1962  s_balances[account] */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":1954:1961  account */\n      dup7\n        /* \"contracts/DeFi/DeFiStaking.sol\":1943:1962  s_balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DeFi/DeFiStaking.sol\":1943:2019  s_balances[account] * (rewardPerToken() - s_userRewardPerTokenPaid[account]) */\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"contracts/DeFi/DeFiStaking.sol\":1942:2043  (s_balances[account] * (rewardPerToken() - s_userRewardPerTokenPaid[account])) /... */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"contracts/DeFi/DeFiStaking.sol\":1941:2065  ((s_balances[account] * (rewardPerToken() - s_userRewardPerTokenPaid[account])) /... */\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"contracts/DeFi/DeFiStaking.sol\":1922:2065  return... */\n      swap1\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":1849:2072  function earned(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DeFi/DeFiStaking.sol\":341:369  IERC20 public s_rewardsToken */\n    tag_27:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/DeFi/DeFiStaking.sol\":2716:3066  function withdraw(uint256 amount) external updateReward(msg.sender) nonReentrant {... */\n    tag_33:\n        /* \"contracts/DeFi/DeFiStaking.sol\":2772:2782  msg.sender */\n      caller\n        /* \"contracts/DeFi/DeFiStaking.sol\":3640:3656  rewardPerToken() */\n      tag_81\n        /* \"contracts/DeFi/DeFiStaking.sol\":3640:3654  rewardPerToken */\n      tag_64\n        /* \"contracts/DeFi/DeFiStaking.sol\":3640:3656  rewardPerToken() */\n      jump\t// in\n    tag_81:\n        /* \"contracts/DeFi/DeFiStaking.sol\":3615:3637  s_rewardPerTokenStored */\n      0x04\n        /* \"contracts/DeFi/DeFiStaking.sol\":3615:3656  s_rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":3685:3700  block.timestamp */\n      timestamp\n        /* \"contracts/DeFi/DeFiStaking.sol\":3666:3682  s_lastUpdateTime */\n      0x03\n        /* \"contracts/DeFi/DeFiStaking.sol\":3666:3700  s_lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":3731:3746  earned(account) */\n      tag_82\n        /* \"contracts/DeFi/DeFiStaking.sol\":3738:3745  account */\n      dup2\n        /* \"contracts/DeFi/DeFiStaking.sol\":3731:3737  earned */\n      tag_23\n        /* \"contracts/DeFi/DeFiStaking.sol\":3731:3746  earned(account) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/DeFi/DeFiStaking.sol\":3710:3719  s_rewards */\n      0x06\n        /* \"contracts/DeFi/DeFiStaking.sol\":3710:3728  s_rewards[account] */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":3720:3727  account */\n      dup4\n        /* \"contracts/DeFi/DeFiStaking.sol\":3710:3728  s_rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFi/DeFiStaking.sol\":3710:3746  s_rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":3792:3814  s_rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/DeFi/DeFiStaking.sol\":3756:3780  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/DeFi/DeFiStaking.sol\":3756:3789  s_userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":3781:3788  account */\n      dup4\n        /* \"contracts/DeFi/DeFiStaking.sol\":3756:3789  s_userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFi/DeFiStaking.sol\":3756:3814  s_userRewardPerTokenPaid[account] = s_rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":2824:2830  amount */\n      dup2\n        /* \"contracts/DeFi/DeFiStaking.sol\":2807:2820  s_totalSupply */\n      0x07\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":2807:2830  s_totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      tag_88\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_88:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":2866:2872  amount */\n      dup2\n        /* \"contracts/DeFi/DeFiStaking.sol\":2840:2850  s_balances */\n      0x08\n        /* \"contracts/DeFi/DeFiStaking.sol\":2840:2862  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":2851:2861  msg.sender */\n      caller\n        /* \"contracts/DeFi/DeFiStaking.sol\":2840:2862  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":2840:2872  s_balances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_89\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_89:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":2913:2919  amount */\n      dup2\n        /* \"contracts/DeFi/DeFiStaking.sol\":2901:2911  msg.sender */\n      caller\n        /* \"contracts/DeFi/DeFiStaking.sol\":2887:2920  WithdrewStake(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4cb6da433ea55f6e302b7bdbfeed740816a42301cde7f5bac5dff2b340376374\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DeFi/DeFiStaking.sol\":2930:2942  bool success */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":2945:2959  s_stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFi/DeFiStaking.sol\":2945:2968  s_stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/DeFi/DeFiStaking.sol\":2969:2979  msg.sender */\n      caller\n        /* \"contracts/DeFi/DeFiStaking.sol\":2981:2987  amount */\n      dup6\n        /* \"contracts/DeFi/DeFiStaking.sol\":2945:2988  s_stakingToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"contracts/DeFi/DeFiStaking.sol\":2930:2988  bool success = s_stakingToken.transfer(msg.sender, amount) */\n      swap1\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":3003:3010  success */\n      dup1\n        /* \"contracts/DeFi/DeFiStaking.sol\":2998:3060  if (!success) {... */\n      tag_97\n      jumpi\n        /* \"contracts/DeFi/DeFiStaking.sol\":3033:3049  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DeFi/DeFiStaking.sol\":2998:3060  if (!success) {... */\n    tag_97:\n        /* \"contracts/DeFi/DeFiStaking.sol\":2797:3066  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":2716:3066  function withdraw(uint256 amount) external updateReward(msg.sender) nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeFi/DeFiStaking.sol\":747:784  uint256 public s_rewardPerTokenStored */\n    tag_35:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/DeFi/DeFiStaking.sol\":4059:4168  function getStaked(address account) public view returns (uint256) {... */\n    tag_39:\n        /* \"contracts/DeFi/DeFiStaking.sol\":4116:4123  uint256 */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":4142:4152  s_balances */\n      0x08\n        /* \"contracts/DeFi/DeFiStaking.sol\":4142:4161  s_balances[account] */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":4153:4160  account */\n      dup4\n        /* \"contracts/DeFi/DeFiStaking.sol\":4142:4161  s_balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DeFi/DeFiStaking.sol\":4135:4161  return s_balances[account] */\n      swap1\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":4059:4168  function getStaked(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DeFi/DeFiStaking.sol\":663:704  uint256 public constant REWARD_RATE = 100 */\n    tag_42:\n        /* \"contracts/DeFi/DeFiStaking.sol\":701:704  100 */\n      0x64\n        /* \"contracts/DeFi/DeFiStaking.sol\":663:704  uint256 public constant REWARD_RATE = 100 */\n      dup2\n      jump\t// out\n        /* \"contracts/DeFi/DeFiStaking.sol\":710:741  uint256 public s_lastUpdateTime */\n    tag_45:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/DeFi/DeFiStaking.sol\":2184:2600  function stake(uint256 amount)... */\n    tag_49:\n        /* \"contracts/DeFi/DeFiStaking.sol\":2253:2263  msg.sender */\n      caller\n        /* \"contracts/DeFi/DeFiStaking.sol\":3640:3656  rewardPerToken() */\n      tag_100\n        /* \"contracts/DeFi/DeFiStaking.sol\":3640:3654  rewardPerToken */\n      tag_64\n        /* \"contracts/DeFi/DeFiStaking.sol\":3640:3656  rewardPerToken() */\n      jump\t// in\n    tag_100:\n        /* \"contracts/DeFi/DeFiStaking.sol\":3615:3637  s_rewardPerTokenStored */\n      0x04\n        /* \"contracts/DeFi/DeFiStaking.sol\":3615:3656  s_rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":3685:3700  block.timestamp */\n      timestamp\n        /* \"contracts/DeFi/DeFiStaking.sol\":3666:3682  s_lastUpdateTime */\n      0x03\n        /* \"contracts/DeFi/DeFiStaking.sol\":3666:3700  s_lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":3731:3746  earned(account) */\n      tag_101\n        /* \"contracts/DeFi/DeFiStaking.sol\":3738:3745  account */\n      dup2\n        /* \"contracts/DeFi/DeFiStaking.sol\":3731:3737  earned */\n      tag_23\n        /* \"contracts/DeFi/DeFiStaking.sol\":3731:3746  earned(account) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/DeFi/DeFiStaking.sol\":3710:3719  s_rewards */\n      0x06\n        /* \"contracts/DeFi/DeFiStaking.sol\":3710:3728  s_rewards[account] */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":3720:3727  account */\n      dup4\n        /* \"contracts/DeFi/DeFiStaking.sol\":3710:3728  s_rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFi/DeFiStaking.sol\":3710:3746  s_rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":3792:3814  s_rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/DeFi/DeFiStaking.sol\":3756:3780  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/DeFi/DeFiStaking.sol\":3756:3789  s_userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":3781:3788  account */\n      dup4\n        /* \"contracts/DeFi/DeFiStaking.sol\":3756:3789  s_userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFi/DeFiStaking.sol\":3756:3814  s_userRewardPerTokenPaid[account] = s_rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_86\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":2307:2313  amount */\n      dup2\n        /* \"contracts/DeFi/DeFiStaking.sol\":3900:3901  0 */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":3890:3896  amount */\n      dup2\n        /* \"contracts/DeFi/DeFiStaking.sol\":3890:3901  amount == 0 */\n      eq\n        /* \"contracts/DeFi/DeFiStaking.sol\":3886:3954  if (amount == 0) {... */\n      iszero\n      tag_106\n      jumpi\n        /* \"contracts/DeFi/DeFiStaking.sol\":3924:3943  NeedsMoreThanZero() */\n      mload(0x40)\n      0xf45911f000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DeFi/DeFiStaking.sol\":3886:3954  if (amount == 0) {... */\n    tag_106:\n        /* \"contracts/DeFi/DeFiStaking.sol\":2346:2352  amount */\n      dup3\n        /* \"contracts/DeFi/DeFiStaking.sol\":2329:2342  s_totalSupply */\n      0x07\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":2329:2352  s_totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_108\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_108:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":2388:2394  amount */\n      dup3\n        /* \"contracts/DeFi/DeFiStaking.sol\":2362:2372  s_balances */\n      0x08\n        /* \"contracts/DeFi/DeFiStaking.sol\":2362:2384  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":2373:2383  msg.sender */\n      caller\n        /* \"contracts/DeFi/DeFiStaking.sol\":2362:2384  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":2362:2394  s_balances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_109\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_109:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":2428:2434  amount */\n      dup3\n        /* \"contracts/DeFi/DeFiStaking.sol\":2416:2426  msg.sender */\n      caller\n        /* \"contracts/DeFi/DeFiStaking.sol\":2409:2435  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DeFi/DeFiStaking.sol\":2445:2457  bool success */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":2460:2474  s_stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFi/DeFiStaking.sol\":2460:2487  s_stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/DeFi/DeFiStaking.sol\":2488:2498  msg.sender */\n      caller\n        /* \"contracts/DeFi/DeFiStaking.sol\":2508:2512  this */\n      address\n        /* \"contracts/DeFi/DeFiStaking.sol\":2515:2521  amount */\n      dup8\n        /* \"contracts/DeFi/DeFiStaking.sol\":2460:2522  s_stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_115:\n        /* \"contracts/DeFi/DeFiStaking.sol\":2445:2522  bool success = s_stakingToken.transferFrom(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":2537:2544  success */\n      dup1\n        /* \"contracts/DeFi/DeFiStaking.sol\":2532:2594  if (!success) {... */\n      tag_116\n      jumpi\n        /* \"contracts/DeFi/DeFiStaking.sol\":2567:2583  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DeFi/DeFiStaking.sol\":2532:2594  if (!success) {... */\n    tag_116:\n        /* \"contracts/DeFi/DeFiStaking.sol\":2319:2600  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2484:2485  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":2184:2600  function stake(uint256 amount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeFi/DeFiStaking.sol\":942:987  mapping(address => uint256) public s_balances */\n    tag_52:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/DeFi/DeFiStaking.sol\":375:403  IERC20 public s_stakingToken */\n    tag_55:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/DeFi/DeFiStaking.sol\":3128:3476  function claimReward() external updateReward(msg.sender) nonReentrant {... */\n    tag_58:\n        /* \"contracts/DeFi/DeFiStaking.sol\":3173:3183  msg.sender */\n      caller\n        /* \"contracts/DeFi/DeFiStaking.sol\":3640:3656  rewardPerToken() */\n      tag_118\n        /* \"contracts/DeFi/DeFiStaking.sol\":3640:3654  rewardPerToken */\n      tag_64\n        /* \"contracts/DeFi/DeFiStaking.sol\":3640:3656  rewardPerToken() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/DeFi/DeFiStaking.sol\":3615:3637  s_rewardPerTokenStored */\n      0x04\n        /* \"contracts/DeFi/DeFiStaking.sol\":3615:3656  s_rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":3685:3700  block.timestamp */\n      timestamp\n        /* \"contracts/DeFi/DeFiStaking.sol\":3666:3682  s_lastUpdateTime */\n      0x03\n        /* \"contracts/DeFi/DeFiStaking.sol\":3666:3700  s_lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":3731:3746  earned(account) */\n      tag_119\n        /* \"contracts/DeFi/DeFiStaking.sol\":3738:3745  account */\n      dup2\n        /* \"contracts/DeFi/DeFiStaking.sol\":3731:3737  earned */\n      tag_23\n        /* \"contracts/DeFi/DeFiStaking.sol\":3731:3746  earned(account) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/DeFi/DeFiStaking.sol\":3710:3719  s_rewards */\n      0x06\n        /* \"contracts/DeFi/DeFiStaking.sol\":3710:3728  s_rewards[account] */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":3720:3727  account */\n      dup4\n        /* \"contracts/DeFi/DeFiStaking.sol\":3710:3728  s_rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFi/DeFiStaking.sol\":3710:3746  s_rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":3792:3814  s_rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/DeFi/DeFiStaking.sol\":3756:3780  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/DeFi/DeFiStaking.sol\":3756:3789  s_userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":3781:3788  account */\n      dup4\n        /* \"contracts/DeFi/DeFiStaking.sol\":3756:3789  s_userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFi/DeFiStaking.sol\":3756:3814  s_userRewardPerTokenPaid[account] = s_rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_86\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":3208:3222  uint256 reward */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":3225:3234  s_rewards */\n      0x06\n        /* \"contracts/DeFi/DeFiStaking.sol\":3225:3246  s_rewards[msg.sender] */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":3235:3245  msg.sender */\n      caller\n        /* \"contracts/DeFi/DeFiStaking.sol\":3225:3246  s_rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DeFi/DeFiStaking.sol\":3208:3246  uint256 reward = s_rewards[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":3280:3281  0 */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":3256:3265  s_rewards */\n      0x06\n        /* \"contracts/DeFi/DeFiStaking.sol\":3256:3277  s_rewards[msg.sender] */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":3266:3276  msg.sender */\n      caller\n        /* \"contracts/DeFi/DeFiStaking.sol\":3256:3277  s_rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeFi/DeFiStaking.sol\":3256:3281  s_rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":3323:3329  reward */\n      dup1\n        /* \"contracts/DeFi/DeFiStaking.sol\":3311:3321  msg.sender */\n      caller\n        /* \"contracts/DeFi/DeFiStaking.sol\":3296:3330  RewardsClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DeFi/DeFiStaking.sol\":3340:3352  bool success */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":3355:3369  s_rewardsToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeFi/DeFiStaking.sol\":3355:3378  s_rewardsToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/DeFi/DeFiStaking.sol\":3379:3389  msg.sender */\n      caller\n        /* \"contracts/DeFi/DeFiStaking.sol\":3391:3397  reward */\n      dup5\n        /* \"contracts/DeFi/DeFiStaking.sol\":3355:3398  s_rewardsToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_124:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_128:\n        /* \"contracts/DeFi/DeFiStaking.sol\":3340:3398  bool success = s_rewardsToken.transfer(msg.sender, reward) */\n      swap1\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":3413:3420  success */\n      dup1\n        /* \"contracts/DeFi/DeFiStaking.sol\":3408:3470  if (!success) {... */\n      tag_129\n      jumpi\n        /* \"contracts/DeFi/DeFiStaking.sol\":3443:3459  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DeFi/DeFiStaking.sol\":3408:3470  if (!success) {... */\n    tag_129:\n        /* \"contracts/DeFi/DeFiStaking.sol\":3198:3476  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":3128:3476  function claimReward() external updateReward(msg.sender) nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/DeFi/DeFiStaking.sol\":856:900  mapping(address => uint256) public s_rewards */\n    tag_61:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/DeFi/DeFiStaking.sol\":1485:1778  function rewardPerToken() public view returns (uint256) {... */\n    tag_64:\n        /* \"contracts/DeFi/DeFiStaking.sol\":1532:1539  uint256 */\n      0x00\n        /* \"contracts/DeFi/DeFiStaking.sol\":1572:1573  0 */\n      dup1\n        /* \"contracts/DeFi/DeFiStaking.sol\":1555:1568  s_totalSupply */\n      sload(0x07)\n        /* \"contracts/DeFi/DeFiStaking.sol\":1555:1573  s_totalSupply == 0 */\n      eq\n        /* \"contracts/DeFi/DeFiStaking.sol\":1551:1629  if (s_totalSupply == 0) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"contracts/DeFi/DeFiStaking.sol\":1596:1618  s_rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/DeFi/DeFiStaking.sol\":1589:1618  return s_rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_130)\n        /* \"contracts/DeFi/DeFiStaking.sol\":1551:1629  if (s_totalSupply == 0) {... */\n    tag_131:\n        /* \"contracts/DeFi/DeFiStaking.sol\":1757:1770  s_totalSupply */\n      sload(0x07)\n        /* \"contracts/DeFi/DeFiStaking.sol\":1749:1753  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/DeFi/DeFiStaking.sol\":701:704  100 */\n      0x64\n        /* \"contracts/DeFi/DeFiStaking.sol\":1715:1731  s_lastUpdateTime */\n      sload(0x03)\n        /* \"contracts/DeFi/DeFiStaking.sol\":1697:1712  block.timestamp */\n      timestamp\n        /* \"contracts/DeFi/DeFiStaking.sol\":1697:1731  block.timestamp - s_lastUpdateTime */\n      tag_132\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_132:\n        /* \"contracts/DeFi/DeFiStaking.sol\":1696:1746  (block.timestamp - s_lastUpdateTime) * REWARD_RATE */\n      tag_133\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_133:\n        /* \"contracts/DeFi/DeFiStaking.sol\":1696:1753  (block.timestamp - s_lastUpdateTime) * REWARD_RATE * 1e18 */\n      tag_134\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_134:\n        /* \"contracts/DeFi/DeFiStaking.sol\":1695:1770  ((block.timestamp - s_lastUpdateTime) * REWARD_RATE * 1e18) / s_totalSupply */\n      tag_135\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_135:\n        /* \"contracts/DeFi/DeFiStaking.sol\":1657:1679  s_rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/DeFi/DeFiStaking.sol\":1657:1771  s_rewardPerTokenStored +... */\n      tag_136\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_136:\n        /* \"contracts/DeFi/DeFiStaking.sol\":1638:1771  return... */\n      swap1\n      pop\n        /* \"contracts/DeFi/DeFiStaking.sol\":1485:1778  function rewardPerToken() public view returns (uint256) {... */\n    tag_130:\n      swap1\n      jump\t// out\n        /* \"contracts/DeFi/DeFiStaking.sol\":791:850  mapping(address => uint256) public s_userRewardPerTokenPaid */\n    tag_68:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_138:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_140\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_142:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_144\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_146:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_148\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:769   */\n    tag_22:\n        /* \"#utility.yul\":499:505   */\n      0x00\n        /* \"#utility.yul\":548:550   */\n      0x20\n        /* \"#utility.yul\":536:545   */\n      dup3\n        /* \"#utility.yul\":527:534   */\n      dup5\n        /* \"#utility.yul\":523:546   */\n      sub\n        /* \"#utility.yul\":519:551   */\n      slt\n        /* \"#utility.yul\":516:635   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":554:633   */\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":516:635   */\n    tag_151:\n        /* \"#utility.yul\":674:675   */\n      0x00\n        /* \"#utility.yul\":699:752   */\n      tag_154\n        /* \"#utility.yul\":744:751   */\n      dup5\n        /* \"#utility.yul\":735:741   */\n      dup3\n        /* \"#utility.yul\":724:733   */\n      dup6\n        /* \"#utility.yul\":720:742   */\n      add\n        /* \"#utility.yul\":699:752   */\n      tag_138\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":689:752   */\n      swap2\n      pop\n        /* \"#utility.yul\":645:762   */\n      pop\n        /* \"#utility.yul\":440:769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":775:1120   */\n    tag_96:\n        /* \"#utility.yul\":842:848   */\n      0x00\n        /* \"#utility.yul\":891:893   */\n      0x20\n        /* \"#utility.yul\":879:888   */\n      dup3\n        /* \"#utility.yul\":870:877   */\n      dup5\n        /* \"#utility.yul\":866:889   */\n      sub\n        /* \"#utility.yul\":862:894   */\n      slt\n        /* \"#utility.yul\":859:978   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":897:976   */\n      tag_157\n      tag_153\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":859:978   */\n    tag_156:\n        /* \"#utility.yul\":1017:1018   */\n      0x00\n        /* \"#utility.yul\":1042:1103   */\n      tag_158\n        /* \"#utility.yul\":1095:1102   */\n      dup5\n        /* \"#utility.yul\":1086:1092   */\n      dup3\n        /* \"#utility.yul\":1075:1084   */\n      dup6\n        /* \"#utility.yul\":1071:1093   */\n      add\n        /* \"#utility.yul\":1042:1103   */\n      tag_142\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1032:1103   */\n      swap2\n      pop\n        /* \"#utility.yul\":988:1113   */\n      pop\n        /* \"#utility.yul\":775:1120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1126:1455   */\n    tag_32:\n        /* \"#utility.yul\":1185:1191   */\n      0x00\n        /* \"#utility.yul\":1234:1236   */\n      0x20\n        /* \"#utility.yul\":1222:1231   */\n      dup3\n        /* \"#utility.yul\":1213:1220   */\n      dup5\n        /* \"#utility.yul\":1209:1232   */\n      sub\n        /* \"#utility.yul\":1205:1237   */\n      slt\n        /* \"#utility.yul\":1202:1321   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1240:1319   */\n      tag_161\n      tag_153\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1202:1321   */\n    tag_160:\n        /* \"#utility.yul\":1360:1361   */\n      0x00\n        /* \"#utility.yul\":1385:1438   */\n      tag_162\n        /* \"#utility.yul\":1430:1437   */\n      dup5\n        /* \"#utility.yul\":1421:1427   */\n      dup3\n        /* \"#utility.yul\":1410:1419   */\n      dup6\n        /* \"#utility.yul\":1406:1428   */\n      add\n        /* \"#utility.yul\":1385:1438   */\n      tag_146\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1375:1438   */\n      swap2\n      pop\n        /* \"#utility.yul\":1331:1448   */\n      pop\n        /* \"#utility.yul\":1126:1455   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1461:1579   */\n    tag_163:\n        /* \"#utility.yul\":1548:1572   */\n      tag_165\n        /* \"#utility.yul\":1566:1571   */\n      dup2\n        /* \"#utility.yul\":1548:1572   */\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1543:1546   */\n      dup3\n        /* \"#utility.yul\":1536:1573   */\n      mstore\n        /* \"#utility.yul\":1461:1579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1585:1744   */\n    tag_167:\n        /* \"#utility.yul\":1686:1737   */\n      tag_169\n        /* \"#utility.yul\":1731:1736   */\n      dup2\n        /* \"#utility.yul\":1686:1737   */\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1674:1738   */\n      mstore\n        /* \"#utility.yul\":1585:1744   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1750:2116   */\n    tag_171:\n        /* \"#utility.yul\":1892:1895   */\n      0x00\n        /* \"#utility.yul\":1913:1980   */\n      tag_173\n        /* \"#utility.yul\":1977:1979   */\n      0x1f\n        /* \"#utility.yul\":1972:1975   */\n      dup4\n        /* \"#utility.yul\":1913:1980   */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1906:1980   */\n      swap2\n      pop\n        /* \"#utility.yul\":1989:2082   */\n      tag_175\n        /* \"#utility.yul\":2078:2081   */\n      dup3\n        /* \"#utility.yul\":1989:2082   */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2107:2109   */\n      0x20\n        /* \"#utility.yul\":2102:2105   */\n      dup3\n        /* \"#utility.yul\":2098:2110   */\n      add\n        /* \"#utility.yul\":2091:2110   */\n      swap1\n      pop\n        /* \"#utility.yul\":1750:2116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2122:2240   */\n    tag_177:\n        /* \"#utility.yul\":2209:2233   */\n      tag_179\n        /* \"#utility.yul\":2227:2232   */\n      dup2\n        /* \"#utility.yul\":2209:2233   */\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2204:2207   */\n      dup3\n        /* \"#utility.yul\":2197:2234   */\n      mstore\n        /* \"#utility.yul\":2122:2240   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2246:2688   */\n    tag_111:\n        /* \"#utility.yul\":2395:2399   */\n      0x00\n        /* \"#utility.yul\":2433:2435   */\n      0x60\n        /* \"#utility.yul\":2422:2431   */\n      dup3\n        /* \"#utility.yul\":2418:2436   */\n      add\n        /* \"#utility.yul\":2410:2436   */\n      swap1\n      pop\n        /* \"#utility.yul\":2446:2517   */\n      tag_182\n        /* \"#utility.yul\":2514:2515   */\n      0x00\n        /* \"#utility.yul\":2503:2512   */\n      dup4\n        /* \"#utility.yul\":2499:2516   */\n      add\n        /* \"#utility.yul\":2490:2496   */\n      dup7\n        /* \"#utility.yul\":2446:2517   */\n      tag_163\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2527:2599   */\n      tag_183\n        /* \"#utility.yul\":2595:2597   */\n      0x20\n        /* \"#utility.yul\":2584:2593   */\n      dup4\n        /* \"#utility.yul\":2580:2598   */\n      add\n        /* \"#utility.yul\":2571:2577   */\n      dup6\n        /* \"#utility.yul\":2527:2599   */\n      tag_163\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2609:2681   */\n      tag_184\n        /* \"#utility.yul\":2677:2679   */\n      0x40\n        /* \"#utility.yul\":2666:2675   */\n      dup4\n        /* \"#utility.yul\":2662:2680   */\n      add\n        /* \"#utility.yul\":2653:2659   */\n      dup5\n        /* \"#utility.yul\":2609:2681   */\n      tag_177\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2246:2688   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2694:3026   */\n    tag_91:\n        /* \"#utility.yul\":2815:2819   */\n      0x00\n        /* \"#utility.yul\":2853:2855   */\n      0x40\n        /* \"#utility.yul\":2842:2851   */\n      dup3\n        /* \"#utility.yul\":2838:2856   */\n      add\n        /* \"#utility.yul\":2830:2856   */\n      swap1\n      pop\n        /* \"#utility.yul\":2866:2937   */\n      tag_186\n        /* \"#utility.yul\":2934:2935   */\n      0x00\n        /* \"#utility.yul\":2923:2932   */\n      dup4\n        /* \"#utility.yul\":2919:2936   */\n      add\n        /* \"#utility.yul\":2910:2916   */\n      dup6\n        /* \"#utility.yul\":2866:2937   */\n      tag_163\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2947:3019   */\n      tag_187\n        /* \"#utility.yul\":3015:3017   */\n      0x20\n        /* \"#utility.yul\":3004:3013   */\n      dup4\n        /* \"#utility.yul\":3000:3018   */\n      add\n        /* \"#utility.yul\":2991:2997   */\n      dup5\n        /* \"#utility.yul\":2947:3019   */\n      tag_177\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2694:3026   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3032:3282   */\n    tag_29:\n        /* \"#utility.yul\":3139:3143   */\n      0x00\n        /* \"#utility.yul\":3177:3179   */\n      0x20\n        /* \"#utility.yul\":3166:3175   */\n      dup3\n        /* \"#utility.yul\":3162:3180   */\n      add\n        /* \"#utility.yul\":3154:3180   */\n      swap1\n      pop\n        /* \"#utility.yul\":3190:3275   */\n      tag_189\n        /* \"#utility.yul\":3272:3273   */\n      0x00\n        /* \"#utility.yul\":3261:3270   */\n      dup4\n        /* \"#utility.yul\":3257:3274   */\n      add\n        /* \"#utility.yul\":3248:3254   */\n      dup5\n        /* \"#utility.yul\":3190:3275   */\n      tag_167\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3032:3282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3288:3707   */\n    tag_86:\n        /* \"#utility.yul\":3454:3458   */\n      0x00\n        /* \"#utility.yul\":3492:3494   */\n      0x20\n        /* \"#utility.yul\":3481:3490   */\n      dup3\n        /* \"#utility.yul\":3477:3495   */\n      add\n        /* \"#utility.yul\":3469:3495   */\n      swap1\n      pop\n        /* \"#utility.yul\":3541:3550   */\n      dup2\n        /* \"#utility.yul\":3535:3539   */\n      dup2\n        /* \"#utility.yul\":3531:3551   */\n      sub\n        /* \"#utility.yul\":3527:3528   */\n      0x00\n        /* \"#utility.yul\":3516:3525   */\n      dup4\n        /* \"#utility.yul\":3512:3529   */\n      add\n        /* \"#utility.yul\":3505:3552   */\n      mstore\n        /* \"#utility.yul\":3569:3700   */\n      tag_191\n        /* \"#utility.yul\":3695:3699   */\n      dup2\n        /* \"#utility.yul\":3569:3700   */\n      tag_171\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3561:3700   */\n      swap1\n      pop\n        /* \"#utility.yul\":3288:3707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3713:3935   */\n    tag_25:\n        /* \"#utility.yul\":3806:3810   */\n      0x00\n        /* \"#utility.yul\":3844:3846   */\n      0x20\n        /* \"#utility.yul\":3833:3842   */\n      dup3\n        /* \"#utility.yul\":3829:3847   */\n      add\n        /* \"#utility.yul\":3821:3847   */\n      swap1\n      pop\n        /* \"#utility.yul\":3857:3928   */\n      tag_193\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3914:3923   */\n      dup4\n        /* \"#utility.yul\":3910:3927   */\n      add\n        /* \"#utility.yul\":3901:3907   */\n      dup5\n        /* \"#utility.yul\":3857:3928   */\n      tag_177\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3713:3935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4022:4191   */\n    tag_174:\n        /* \"#utility.yul\":4106:4117   */\n      0x00\n        /* \"#utility.yul\":4140:4146   */\n      dup3\n        /* \"#utility.yul\":4135:4138   */\n      dup3\n        /* \"#utility.yul\":4128:4147   */\n      mstore\n        /* \"#utility.yul\":4180:4184   */\n      0x20\n        /* \"#utility.yul\":4175:4178   */\n      dup3\n        /* \"#utility.yul\":4171:4185   */\n      add\n        /* \"#utility.yul\":4156:4185   */\n      swap1\n      pop\n        /* \"#utility.yul\":4022:4191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4197:4502   */\n    tag_79:\n        /* \"#utility.yul\":4237:4240   */\n      0x00\n        /* \"#utility.yul\":4256:4276   */\n      tag_198\n        /* \"#utility.yul\":4274:4275   */\n      dup3\n        /* \"#utility.yul\":4256:4276   */\n      tag_180\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4251:4276   */\n      swap2\n      pop\n        /* \"#utility.yul\":4290:4310   */\n      tag_199\n        /* \"#utility.yul\":4308:4309   */\n      dup4\n        /* \"#utility.yul\":4290:4310   */\n      tag_180\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4285:4310   */\n      swap3\n      pop\n        /* \"#utility.yul\":4444:4445   */\n      dup3\n        /* \"#utility.yul\":4376:4442   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4372:4446   */\n      sub\n        /* \"#utility.yul\":4369:4370   */\n      dup3\n        /* \"#utility.yul\":4366:4447   */\n      gt\n        /* \"#utility.yul\":4363:4470   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":4450:4468   */\n      tag_201\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4363:4470   */\n    tag_200:\n        /* \"#utility.yul\":4494:4495   */\n      dup3\n        /* \"#utility.yul\":4491:4492   */\n      dup3\n        /* \"#utility.yul\":4487:4496   */\n      add\n        /* \"#utility.yul\":4480:4496   */\n      swap1\n      pop\n        /* \"#utility.yul\":4197:4502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4508:4693   */\n    tag_77:\n        /* \"#utility.yul\":4548:4549   */\n      0x00\n        /* \"#utility.yul\":4565:4585   */\n      tag_204\n        /* \"#utility.yul\":4583:4584   */\n      dup3\n        /* \"#utility.yul\":4565:4585   */\n      tag_180\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4560:4585   */\n      swap2\n      pop\n        /* \"#utility.yul\":4599:4619   */\n      tag_205\n        /* \"#utility.yul\":4617:4618   */\n      dup4\n        /* \"#utility.yul\":4599:4619   */\n      tag_180\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4594:4619   */\n      swap3\n      pop\n        /* \"#utility.yul\":4638:4639   */\n      dup3\n        /* \"#utility.yul\":4628:4663   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":4643:4661   */\n      tag_207\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4628:4663   */\n    tag_206:\n        /* \"#utility.yul\":4685:4686   */\n      dup3\n        /* \"#utility.yul\":4682:4683   */\n      dup3\n        /* \"#utility.yul\":4678:4687   */\n      div\n        /* \"#utility.yul\":4673:4687   */\n      swap1\n      pop\n        /* \"#utility.yul\":4508:4693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4699:5047   */\n    tag_75:\n        /* \"#utility.yul\":4739:4746   */\n      0x00\n        /* \"#utility.yul\":4762:4782   */\n      tag_210\n        /* \"#utility.yul\":4780:4781   */\n      dup3\n        /* \"#utility.yul\":4762:4782   */\n      tag_180\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4757:4782   */\n      swap2\n      pop\n        /* \"#utility.yul\":4796:4816   */\n      tag_211\n        /* \"#utility.yul\":4814:4815   */\n      dup4\n        /* \"#utility.yul\":4796:4816   */\n      tag_180\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4791:4816   */\n      swap3\n      pop\n        /* \"#utility.yul\":4984:4985   */\n      dup2\n        /* \"#utility.yul\":4916:4982   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4912:4986   */\n      div\n        /* \"#utility.yul\":4909:4910   */\n      dup4\n        /* \"#utility.yul\":4906:4987   */\n      gt\n        /* \"#utility.yul\":4901:4902   */\n      dup3\n        /* \"#utility.yul\":4894:4903   */\n      iszero\n        /* \"#utility.yul\":4887:4904   */\n      iszero\n        /* \"#utility.yul\":4883:4988   */\n      and\n        /* \"#utility.yul\":4880:5011   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":4991:5009   */\n      tag_213\n      tag_202\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4880:5011   */\n    tag_212:\n        /* \"#utility.yul\":5039:5040   */\n      dup3\n        /* \"#utility.yul\":5036:5037   */\n      dup3\n        /* \"#utility.yul\":5032:5041   */\n      mul\n        /* \"#utility.yul\":5021:5041   */\n      swap1\n      pop\n        /* \"#utility.yul\":4699:5047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5053:5244   */\n    tag_73:\n        /* \"#utility.yul\":5093:5097   */\n      0x00\n        /* \"#utility.yul\":5113:5133   */\n      tag_215\n        /* \"#utility.yul\":5131:5132   */\n      dup3\n        /* \"#utility.yul\":5113:5133   */\n      tag_180\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5108:5133   */\n      swap2\n      pop\n        /* \"#utility.yul\":5147:5167   */\n      tag_216\n        /* \"#utility.yul\":5165:5166   */\n      dup4\n        /* \"#utility.yul\":5147:5167   */\n      tag_180\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5142:5167   */\n      swap3\n      pop\n        /* \"#utility.yul\":5186:5187   */\n      dup3\n        /* \"#utility.yul\":5183:5184   */\n      dup3\n        /* \"#utility.yul\":5180:5188   */\n      lt\n        /* \"#utility.yul\":5177:5211   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":5191:5209   */\n      tag_218\n      tag_202\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5177:5211   */\n    tag_217:\n        /* \"#utility.yul\":5236:5237   */\n      dup3\n        /* \"#utility.yul\":5233:5234   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      sub\n        /* \"#utility.yul\":5221:5238   */\n      swap1\n      pop\n        /* \"#utility.yul\":5053:5244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5250:5346   */\n    tag_166:\n        /* \"#utility.yul\":5287:5294   */\n      0x00\n        /* \"#utility.yul\":5316:5340   */\n      tag_220\n        /* \"#utility.yul\":5334:5339   */\n      dup3\n        /* \"#utility.yul\":5316:5340   */\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5305:5340   */\n      swap1\n      pop\n        /* \"#utility.yul\":5250:5346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5352:5442   */\n    tag_222:\n        /* \"#utility.yul\":5386:5393   */\n      0x00\n        /* \"#utility.yul\":5429:5434   */\n      dup2\n        /* \"#utility.yul\":5422:5435   */\n      iszero\n        /* \"#utility.yul\":5415:5436   */\n      iszero\n        /* \"#utility.yul\":5404:5436   */\n      swap1\n      pop\n        /* \"#utility.yul\":5352:5442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5448:5574   */\n    tag_221:\n        /* \"#utility.yul\":5485:5492   */\n      0x00\n        /* \"#utility.yul\":5525:5567   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5518:5523   */\n      dup3\n        /* \"#utility.yul\":5514:5568   */\n      and\n        /* \"#utility.yul\":5503:5568   */\n      swap1\n      pop\n        /* \"#utility.yul\":5448:5574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5580:5657   */\n    tag_180:\n        /* \"#utility.yul\":5617:5624   */\n      0x00\n        /* \"#utility.yul\":5646:5651   */\n      dup2\n        /* \"#utility.yul\":5635:5651   */\n      swap1\n      pop\n        /* \"#utility.yul\":5580:5657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5663:5803   */\n    tag_170:\n        /* \"#utility.yul\":5727:5736   */\n      0x00\n        /* \"#utility.yul\":5760:5797   */\n      tag_227\n        /* \"#utility.yul\":5791:5796   */\n      dup3\n        /* \"#utility.yul\":5760:5797   */\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5747:5797   */\n      swap1\n      pop\n        /* \"#utility.yul\":5663:5803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5809:5935   */\n    tag_228:\n        /* \"#utility.yul\":5859:5868   */\n      0x00\n        /* \"#utility.yul\":5892:5929   */\n      tag_230\n        /* \"#utility.yul\":5923:5928   */\n      dup3\n        /* \"#utility.yul\":5892:5929   */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5879:5929   */\n      swap1\n      pop\n        /* \"#utility.yul\":5809:5935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5941:6054   */\n    tag_231:\n        /* \"#utility.yul\":5991:6000   */\n      0x00\n        /* \"#utility.yul\":6024:6048   */\n      tag_233\n        /* \"#utility.yul\":6042:6047   */\n      dup3\n        /* \"#utility.yul\":6024:6048   */\n      tag_221\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6011:6048   */\n      swap1\n      pop\n        /* \"#utility.yul\":5941:6054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6060:6240   */\n    tag_202:\n        /* \"#utility.yul\":6108:6185   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6105:6106   */\n      0x00\n        /* \"#utility.yul\":6098:6186   */\n      mstore\n        /* \"#utility.yul\":6205:6209   */\n      0x11\n        /* \"#utility.yul\":6202:6203   */\n      0x04\n        /* \"#utility.yul\":6195:6210   */\n      mstore\n        /* \"#utility.yul\":6229:6233   */\n      0x24\n        /* \"#utility.yul\":6226:6227   */\n      0x00\n        /* \"#utility.yul\":6219:6234   */\n      revert\n        /* \"#utility.yul\":6246:6426   */\n    tag_208:\n        /* \"#utility.yul\":6294:6371   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6291:6292   */\n      0x00\n        /* \"#utility.yul\":6284:6372   */\n      mstore\n        /* \"#utility.yul\":6391:6395   */\n      0x12\n        /* \"#utility.yul\":6388:6389   */\n      0x04\n        /* \"#utility.yul\":6381:6396   */\n      mstore\n        /* \"#utility.yul\":6415:6419   */\n      0x24\n        /* \"#utility.yul\":6412:6413   */\n      0x00\n        /* \"#utility.yul\":6405:6420   */\n      revert\n        /* \"#utility.yul\":6555:6672   */\n    tag_153:\n        /* \"#utility.yul\":6664:6665   */\n      0x00\n        /* \"#utility.yul\":6661:6662   */\n      dup1\n        /* \"#utility.yul\":6654:6666   */\n      revert\n        /* \"#utility.yul\":6678:6859   */\n    tag_176:\n        /* \"#utility.yul\":6818:6851   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":6814:6815   */\n      0x00\n        /* \"#utility.yul\":6806:6812   */\n      dup3\n        /* \"#utility.yul\":6802:6816   */\n      add\n        /* \"#utility.yul\":6795:6852   */\n      mstore\n        /* \"#utility.yul\":6678:6859   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6865:6987   */\n    tag_141:\n        /* \"#utility.yul\":6938:6962   */\n      tag_241\n        /* \"#utility.yul\":6956:6961   */\n      dup2\n        /* \"#utility.yul\":6938:6962   */\n      tag_166\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6931:6936   */\n      dup2\n        /* \"#utility.yul\":6928:6963   */\n      eq\n        /* \"#utility.yul\":6918:6981   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":6977:6978   */\n      0x00\n        /* \"#utility.yul\":6974:6975   */\n      dup1\n        /* \"#utility.yul\":6967:6979   */\n      revert\n        /* \"#utility.yul\":6918:6981   */\n    tag_242:\n        /* \"#utility.yul\":6865:6987   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6993:7109   */\n    tag_145:\n        /* \"#utility.yul\":7063:7084   */\n      tag_244\n        /* \"#utility.yul\":7078:7083   */\n      dup2\n        /* \"#utility.yul\":7063:7084   */\n      tag_222\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7056:7061   */\n      dup2\n        /* \"#utility.yul\":7053:7085   */\n      eq\n        /* \"#utility.yul\":7043:7103   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":7099:7100   */\n      0x00\n        /* \"#utility.yul\":7096:7097   */\n      dup1\n        /* \"#utility.yul\":7089:7101   */\n      revert\n        /* \"#utility.yul\":7043:7103   */\n    tag_245:\n        /* \"#utility.yul\":6993:7109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7115:7237   */\n    tag_149:\n        /* \"#utility.yul\":7188:7212   */\n      tag_247\n        /* \"#utility.yul\":7206:7211   */\n      dup2\n        /* \"#utility.yul\":7188:7212   */\n      tag_180\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7181:7186   */\n      dup2\n        /* \"#utility.yul\":7178:7213   */\n      eq\n        /* \"#utility.yul\":7168:7231   */\n      tag_248\n      jumpi\n        /* \"#utility.yul\":7227:7228   */\n      0x00\n        /* \"#utility.yul\":7224:7225   */\n      dup1\n        /* \"#utility.yul\":7217:7229   */\n      revert\n        /* \"#utility.yul\":7168:7231   */\n    tag_248:\n        /* \"#utility.yul\":7115:7237   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c48ed106f643afa8bfd7c0a8914c72e078e9bbf45667a081cdcdef79d3e2ae7264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:3",
														"type": ""
													}
												],
												"src": "7:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:413:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "298:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:3"
															},
															"nodeType": "YulIf",
															"src": "260:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "389:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "404:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "408:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "433:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "479:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "490:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "475:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "475:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "443:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "433:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "527:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "542:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "546:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "572:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "618:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "629:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "638:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "582:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "572:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:3",
														"type": ""
													}
												],
												"src": "156:507:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "702:6:3",
														"type": ""
													}
												],
												"src": "669:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "805:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "834:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "816:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "805:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "777:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "787:7:3",
														"type": ""
													}
												],
												"src": "750:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "907:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "922:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "907:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "879:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "889:7:3",
														"type": ""
													}
												],
												"src": "852:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1083:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1083:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "984:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1107:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1273:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1330:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1342:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1332:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1332:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1332:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1296:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1321:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1303:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1293:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:43:3"
															},
															"nodeType": "YulIf",
															"src": "1283:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1266:5:3",
														"type": ""
													}
												],
												"src": "1230:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001361380380620013618339818101604052810190620000379190620000e0565b600160008190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200017a565b600081519050620000da8162000160565b92915050565b60008060408385031215620000fa57620000f96200015b565b5b60006200010a85828601620000c9565b92505060206200011d85828601620000c9565b9150509250929050565b600062000134826200013b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200016b8162000127565b81146200017757600080fd5b50565b6111d7806200018a6000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c8063a694fc3a1161008c578063b88a802f11610066578063b88a802f1461024c578063bea0815114610256578063cd3daf9d14610286578063f245ace4146102a4576100e9565b8063a694fc3a146101e2578063ab32eb69146101fe578063adca9b721461022e576100e9565b8063304ac91b116100c8578063304ac91b14610158578063399080ec146101765780635997bb37146101a65780636aa0838f146101c4576100e9565b80628cc262146100ee5780630bd21c561461011e5780632e1a7d4d1461013c575b600080fd5b61010860048036038101906101039190610d9f565b6102d4565b6040516101159190610f11565b60405180910390f35b6101266103d6565b6040516101339190610ed6565b60405180910390f35b61015660048036038101906101519190610df9565b6103fc565b005b61016061069c565b60405161016d9190610f11565b60405180910390f35b610190600480360381019061018b9190610d9f565b6106a2565b60405161019d9190610f11565b60405180910390f35b6101ae6106eb565b6040516101bb9190610f11565b60405180910390f35b6101cc6106f0565b6040516101d99190610f11565b60405180910390f35b6101fc60048036038101906101f79190610df9565b6106f6565b005b61021860048036038101906102139190610d9f565b6109d5565b6040516102259190610f11565b60405180910390f35b6102366109ed565b6040516102439190610ed6565b60405180910390f35b610254610a13565b005b610270600480360381019061026b9190610d9f565b610ccd565b60405161027d9190610f11565b60405180910390f35b61028e610ce5565b60405161029b9190610f11565b60405180910390f35b6102be60048036038101906102b99190610d9f565b610d48565b6040516102cb9190610f11565b60405180910390f35b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a7640000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610367610ce5565b610371919061101e565b600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103bb9190610fc4565b6103c59190610f93565b6103cf9190610f3d565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b33610405610ce5565b6004819055504260038190555061041b816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260005414156104ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e190610ef1565b60405180910390fd5b60026000819055508160076000828254610504919061101e565b9250508190555081600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461055a919061101e565b92505081905550813373ffffffffffffffffffffffffffffffffffffffff167f4cb6da433ea55f6e302b7bdbfeed740816a42301cde7f5bac5dff2b34037637460405160405180910390a36000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610604929190610ead565b602060405180830381600087803b15801561061e57600080fd5b505af1158015610632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106569190610dcc565b90508061068f576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060016000819055505050565b60045481565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606481565b60035481565b336106ff610ce5565b60048190555042600381905550610715816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260005414156107e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db90610ef1565b60405180910390fd5b6002600081905550816000811415610828576040517ff45911f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826007600082825461083a9190610f3d565b9250508190555082600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108909190610f3d565b92505081905550823373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d60405160405180910390a36000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161093c93929190610e76565b602060405180830381600087803b15801561095657600080fd5b505af115801561096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098e9190610dcc565b9050806109c7576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505060016000819055505050565b60086020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b33610a1c610ce5565b60048190555042600381905550610a32816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060026000541415610b01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af890610ef1565b60405180910390fd5b60026000819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550803373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe60405160405180910390a36000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610c35929190610ead565b602060405180830381600087803b158015610c4f57600080fd5b505af1158015610c63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c879190610dcc565b905080610cc0576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050600160008190555050565b60066020528060005260406000206000915090505481565b6000806007541415610cfb576004549050610d45565b600754670de0b6b3a7640000606460035442610d17919061101e565b610d219190610fc4565b610d2b9190610fc4565b610d359190610f93565b600454610d429190610f3d565b90505b90565b60056020528060005260406000206000915090505481565b600081359050610d6f8161115c565b92915050565b600081519050610d8481611173565b92915050565b600081359050610d998161118a565b92915050565b600060208284031215610db557610db461112e565b5b6000610dc384828501610d60565b91505092915050565b600060208284031215610de257610de161112e565b5b6000610df084828501610d75565b91505092915050565b600060208284031215610e0f57610e0e61112e565b5b6000610e1d84828501610d8a565b91505092915050565b610e2f81611052565b82525050565b610e3e8161109a565b82525050565b6000610e51601f83610f2c565b9150610e5c82611133565b602082019050919050565b610e7081611090565b82525050565b6000606082019050610e8b6000830186610e26565b610e986020830185610e26565b610ea56040830184610e67565b949350505050565b6000604082019050610ec26000830185610e26565b610ecf6020830184610e67565b9392505050565b6000602082019050610eeb6000830184610e35565b92915050565b60006020820190508181036000830152610f0a81610e44565b9050919050565b6000602082019050610f266000830184610e67565b92915050565b600082825260208201905092915050565b6000610f4882611090565b9150610f5383611090565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f8857610f876110d0565b5b828201905092915050565b6000610f9e82611090565b9150610fa983611090565b925082610fb957610fb86110ff565b5b828204905092915050565b6000610fcf82611090565b9150610fda83611090565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611013576110126110d0565b5b828202905092915050565b600061102982611090565b915061103483611090565b925082821015611047576110466110d0565b5b828203905092915050565b600061105d82611070565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006110a5826110ac565b9050919050565b60006110b7826110be565b9050919050565b60006110c982611070565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61116581611052565b811461117057600080fd5b50565b61117c81611064565b811461118757600080fd5b50565b61119381611090565b811461119e57600080fd5b5056fea2646970667358221220c48ed106f643afa8bfd7c0a8914c72e078e9bbf45667a081cdcdef79d3e2ae7264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1361 CODESIZE SUB DUP1 PUSH3 0x1361 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x17A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xDA DUP2 PUSH3 0x160 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xFA JUMPI PUSH3 0xF9 PUSH3 0x15B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x10A DUP6 DUP3 DUP7 ADD PUSH3 0xC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x11D DUP6 DUP3 DUP7 ADD PUSH3 0xC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x134 DUP3 PUSH3 0x13B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x16B DUP2 PUSH3 0x127 JUMP JUMPDEST DUP2 EQ PUSH3 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x11D7 DUP1 PUSH3 0x18A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA694FC3A GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xBEA08151 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xF245ACE4 EQ PUSH2 0x2A4 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xAB32EB69 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xADCA9B72 EQ PUSH2 0x22E JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x304AC91B GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x304AC91B EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x399080EC EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x5997BB37 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x6AA0838F EQ PUSH2 0x1C4 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xBD21C56 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x13C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH2 0xA13 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x367 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0xF93 JUMP JUMPDEST PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH2 0x405 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x41B DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x4EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E1 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4CB6DA433EA55F6E302B7BDBFEED740816A42301CDE7F5BAC5DFF2B340376374 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x604 SWAP3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x632 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x656 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x68F JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x6FF PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x715 DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DB SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF45911F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83A SWAP2 SWAP1 PUSH2 0xF3D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x890 SWAP2 SWAP1 PUSH2 0xF3D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x956 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x96A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98E SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH2 0xA1C PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0xA32 DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xB01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF8 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC35 SWAP3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC87 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0xCFB JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0xD17 SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0xD21 SWAP2 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH2 0xD35 SWAP2 SWAP1 PUSH2 0xF93 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xD42 SWAP2 SWAP1 PUSH2 0xF3D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD6F DUP2 PUSH2 0x115C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD84 DUP2 PUSH2 0x1173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD99 DUP2 PUSH2 0x118A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB5 JUMPI PUSH2 0xDB4 PUSH2 0x112E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDC3 DUP5 DUP3 DUP6 ADD PUSH2 0xD60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE2 JUMPI PUSH2 0xDE1 PUSH2 0x112E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDF0 DUP5 DUP3 DUP6 ADD PUSH2 0xD75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0F JUMPI PUSH2 0xE0E PUSH2 0x112E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE1D DUP5 DUP3 DUP6 ADD PUSH2 0xD8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE2F DUP2 PUSH2 0x1052 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE3E DUP2 PUSH2 0x109A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE51 PUSH1 0x1F DUP4 PUSH2 0xF2C JUMP JUMPDEST SWAP2 POP PUSH2 0xE5C DUP3 PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE70 DUP2 PUSH2 0x1090 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE8B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE26 JUMP JUMPDEST PUSH2 0xE98 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE26 JUMP JUMPDEST PUSH2 0xEA5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE67 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xEC2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE26 JUMP JUMPDEST PUSH2 0xECF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE67 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF0A DUP2 PUSH2 0xE44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF26 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF48 DUP3 PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP PUSH2 0xF53 DUP4 PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xF88 JUMPI PUSH2 0xF87 PUSH2 0x10D0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9E DUP3 PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA9 DUP4 PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFB9 JUMPI PUSH2 0xFB8 PUSH2 0x10FF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFCF DUP3 PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP PUSH2 0xFDA DUP4 PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1013 JUMPI PUSH2 0x1012 PUSH2 0x10D0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1029 DUP3 PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP PUSH2 0x1034 DUP4 PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1047 JUMPI PUSH2 0x1046 PUSH2 0x10D0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105D DUP3 PUSH2 0x1070 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A5 DUP3 PUSH2 0x10AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B7 DUP3 PUSH2 0x10BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C9 DUP3 PUSH2 0x1070 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1165 DUP2 PUSH2 0x1052 JUMP JUMPDEST DUP2 EQ PUSH2 0x1170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x117C DUP2 PUSH2 0x1064 JUMP JUMPDEST DUP2 EQ PUSH2 0x1187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1193 DUP2 PUSH2 0x1090 JUMP JUMPDEST DUP2 EQ PUSH2 0x119E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 DUP15 0xD1 MOD 0xF6 NUMBER 0xAF 0xA8 0xBF 0xD7 0xC0 0xA8 SWAP2 0x4C PUSH19 0xE078E9BBF45667A081CDCDEF79D3E2AE726473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "299:3871:2:-:0;;;1202:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:0;1806:7;:22;;;;1292:12:2;1268:14;;:37;;;;;;;;;;;;;;;;;;1339:12;1315:14;;:37;;;;;;;;;;;;;;;;;;1202:157;;299:3871;;7:143:3;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:96::-;787:7;816:24;834:5;816:24;:::i;:::-;805:35;;750:96;;;:::o;852:126::-;889:7;929:42;922:5;918:54;907:65;;852:126;;;:::o;1107:117::-;1216:1;1213;1206:12;1230:122;1303:24;1321:5;1303:24;:::i;:::-;1296:5;1293:35;1283:63;;1342:1;1339;1332:12;1283:63;1230:122;:::o;299:3871:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@REWARD_RATE_136": {
									"entryPoint": 1771,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimReward_397": {
									"entryPoint": 2579,
									"id": 397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@earned_251": {
									"entryPoint": 724,
									"id": 251,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStaked_453": {
									"entryPoint": 1698,
									"id": 453,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardPerToken_222": {
									"entryPoint": 3301,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@s_balances_154": {
									"entryPoint": 2517,
									"id": 154,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_lastUpdateTime_138": {
									"entryPoint": 1776,
									"id": 138,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_rewardPerTokenStored_140": {
									"entryPoint": 1692,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_rewardsToken_130": {
									"entryPoint": 982,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_rewards_148": {
									"entryPoint": 3277,
									"id": 148,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_stakingToken_133": {
									"entryPoint": 2541,
									"id": 133,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_userRewardPerTokenPaid_144": {
									"entryPoint": 3400,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_304": {
									"entryPoint": 1782,
									"id": 304,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_350": {
									"entryPoint": 1020,
									"id": 350,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack": {
									"entryPoint": 3637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3702,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3757,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed": {
									"entryPoint": 3798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$117_to_t_address": {
									"entryPoint": 4250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4304,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4351,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7240:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:3",
														"type": ""
													}
												],
												"src": "152:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:3",
														"type": ""
													}
												],
												"src": "295:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "506:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "552:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "554:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "554:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "554:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "527:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "536:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "523:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "523:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "519:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:32:3"
															},
															"nodeType": "YulIf",
															"src": "516:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "645:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "660:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "674:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "664:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "689:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "724:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "735:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "720:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "744:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "699:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "699:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "689:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "476:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "487:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "499:6:3",
														"type": ""
													}
												],
												"src": "440:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "849:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "895:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "897:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "897:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "897:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "870:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "879:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "866:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "891:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "862:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "862:32:3"
															},
															"nodeType": "YulIf",
															"src": "859:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "988:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1003:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1017:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1007:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1032:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1075:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1086:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1071:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1071:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1095:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1042:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1042:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1032:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "819:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "830:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "842:6:3",
														"type": ""
													}
												],
												"src": "775:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1192:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1238:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1240:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1240:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1240:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1213:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1222:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1209:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1209:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1234:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1205:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1205:32:3"
															},
															"nodeType": "YulIf",
															"src": "1202:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1331:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1346:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1350:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1375:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1410:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1421:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1406:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1406:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1430:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1385:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1385:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1375:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1162:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1173:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1185:6:3",
														"type": ""
													}
												],
												"src": "1126:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1543:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1566:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1548:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1536:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1514:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1521:3:3",
														"type": ""
													}
												],
												"src": "1461:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1664:80:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1731:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$117_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1686:44:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1686:51:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:64:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1674:64:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1652:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1659:3:3",
														"type": ""
													}
												],
												"src": "1585:159:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1896:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1906:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1972:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1977:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1913:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1913:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2078:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "1989:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1989:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1989:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2091:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2102:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2107:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2098:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2098:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2091:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1884:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1892:3:3",
														"type": ""
													}
												],
												"src": "1750:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2187:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2204:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2227:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2209:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2209:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2197:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2197:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2197:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2175:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2182:3:3",
														"type": ""
													}
												],
												"src": "2122:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2400:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2410:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2422:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2433:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2418:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2410:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2490:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2503:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2514:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2499:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2446:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2446:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2446:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2571:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2584:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2595:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2580:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2527:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2527:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2666:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2677:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2662:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2662:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2609:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2609:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2609:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2356:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2368:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2376:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2384:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2395:4:3",
														"type": ""
													}
												],
												"src": "2246:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2820:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2830:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2842:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2853:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2838:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2838:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2830:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2910:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2923:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2934:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2919:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2919:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2866:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2866:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2866:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2991:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3004:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3015:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3000:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3000:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2947:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2947:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2947:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2784:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2796:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2804:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2815:4:3",
														"type": ""
													}
												],
												"src": "2694:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3144:138:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3154:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3166:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3177:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3162:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3162:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3154:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3248:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3261:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3272:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3257:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3257:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3190:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:85:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3190:85:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3116:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3128:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3139:4:3",
														"type": ""
													}
												],
												"src": "3032:250:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3459:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3469:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3481:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3492:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3477:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3477:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3469:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3516:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3527:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3512:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3512:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3535:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3541:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3531:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3531:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3505:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3505:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3505:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3561:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3695:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3569:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3561:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3439:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3454:4:3",
														"type": ""
													}
												],
												"src": "3288:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3811:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3821:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3833:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3844:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3829:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3829:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3821:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3901:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3914:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3925:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3910:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3910:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3857:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3857:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3857:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3783:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3795:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3806:4:3",
														"type": ""
													}
												],
												"src": "3713:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3981:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3991:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4007:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4001:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4001:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3991:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3974:6:3",
														"type": ""
													}
												],
												"src": "3941:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4118:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4135:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4140:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4128:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4128:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4128:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4156:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4175:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4180:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4171:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4156:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4090:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4095:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4106:11:3",
														"type": ""
													}
												],
												"src": "4022:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4241:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4251:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4274:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4256:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4251:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4285:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4308:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4290:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4290:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4285:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4448:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4450:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4450:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4450:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4369:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4376:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4444:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4372:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4372:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4366:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:81:3"
															},
															"nodeType": "YulIf",
															"src": "4363:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4480:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4491:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4494:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4480:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4228:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4231:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4237:3:3",
														"type": ""
													}
												],
												"src": "4197:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4550:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4560:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4583:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4565:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4565:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4560:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4594:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4617:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4599:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4599:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4594:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4641:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4643:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4643:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4643:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4638:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4631:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:9:3"
															},
															"nodeType": "YulIf",
															"src": "4628:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4673:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4682:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4685:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4678:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4678:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4673:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4539:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4542:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4548:1:3",
														"type": ""
													}
												],
												"src": "4508:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4747:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4757:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4780:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4762:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4762:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4757:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4791:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4814:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4796:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4796:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4791:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4989:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4991:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4991:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4991:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4901:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4894:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4894:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4887:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4887:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4909:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4916:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4984:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4912:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4912:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4906:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4906:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4883:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4883:105:3"
															},
															"nodeType": "YulIf",
															"src": "4880:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5021:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5036:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5039:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5032:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5021:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4730:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4733:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4739:7:3",
														"type": ""
													}
												],
												"src": "4699:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5098:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5108:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5131:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5113:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5113:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5108:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5142:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5165:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5147:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5147:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5142:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5189:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5191:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5191:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5191:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5183:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5186:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5180:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5180:8:3"
															},
															"nodeType": "YulIf",
															"src": "5177:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5221:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5233:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5236:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5229:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5229:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5221:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5084:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5087:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5093:4:3",
														"type": ""
													}
												],
												"src": "5053:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5295:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5305:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5334:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5316:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5316:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5305:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5277:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5287:7:3",
														"type": ""
													}
												],
												"src": "5250:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5394:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5404:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5429:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5422:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5422:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5415:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5415:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5404:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5376:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5386:7:3",
														"type": ""
													}
												],
												"src": "5352:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5493:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5503:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5518:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5525:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5514:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5514:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5503:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5475:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5485:7:3",
														"type": ""
													}
												],
												"src": "5448:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5625:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5635:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5646:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5635:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5607:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5617:7:3",
														"type": ""
													}
												],
												"src": "5580:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5737:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5747:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5791:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5760:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5760:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5747:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$117_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5717:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5727:9:3",
														"type": ""
													}
												],
												"src": "5663:140:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5869:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5879:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5923:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5892:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5892:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5879:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5849:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5859:9:3",
														"type": ""
													}
												],
												"src": "5809:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6001:53:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6011:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6042:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6024:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6024:24:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6011:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5981:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5991:9:3",
														"type": ""
													}
												],
												"src": "5941:113:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6088:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6105:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6108:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6098:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6098:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6098:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6202:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6205:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6195:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6195:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6195:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6226:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6229:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6219:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6219:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6219:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6060:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6274:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6291:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6294:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6284:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6284:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6284:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6388:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6391:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6381:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6381:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6381:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6412:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6415:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6405:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6405:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6405:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6246:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6521:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6538:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6541:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6531:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6531:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6531:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "6432:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6644:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6661:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6664:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6654:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6654:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6654:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "6555:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6784:75:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6806:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6814:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6802:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6802:14:3"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6818:33:3",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6795:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6795:57:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6795:57:3"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6776:6:3",
														"type": ""
													}
												],
												"src": "6678:181:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6908:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6965:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6974:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6977:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6967:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6967:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6967:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6931:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6956:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6938:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6938:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6928:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6928:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6921:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6921:43:3"
															},
															"nodeType": "YulIf",
															"src": "6918:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6901:5:3",
														"type": ""
													}
												],
												"src": "6865:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7033:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7087:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7096:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7099:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7089:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7089:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7089:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7056:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7078:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "7063:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7063:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7053:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7053:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7046:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7046:40:3"
															},
															"nodeType": "YulIf",
															"src": "7043:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7026:5:3",
														"type": ""
													}
												],
												"src": "6993:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7158:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7215:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7224:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7227:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7217:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7217:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7217:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7181:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7206:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7188:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7188:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7178:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7178:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7171:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7171:43:3"
															},
															"nodeType": "YulIf",
															"src": "7168:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7151:5:3",
														"type": ""
													}
												],
												"src": "7115:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$117_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$117_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100e95760003560e01c8063a694fc3a1161008c578063b88a802f11610066578063b88a802f1461024c578063bea0815114610256578063cd3daf9d14610286578063f245ace4146102a4576100e9565b8063a694fc3a146101e2578063ab32eb69146101fe578063adca9b721461022e576100e9565b8063304ac91b116100c8578063304ac91b14610158578063399080ec146101765780635997bb37146101a65780636aa0838f146101c4576100e9565b80628cc262146100ee5780630bd21c561461011e5780632e1a7d4d1461013c575b600080fd5b61010860048036038101906101039190610d9f565b6102d4565b6040516101159190610f11565b60405180910390f35b6101266103d6565b6040516101339190610ed6565b60405180910390f35b61015660048036038101906101519190610df9565b6103fc565b005b61016061069c565b60405161016d9190610f11565b60405180910390f35b610190600480360381019061018b9190610d9f565b6106a2565b60405161019d9190610f11565b60405180910390f35b6101ae6106eb565b6040516101bb9190610f11565b60405180910390f35b6101cc6106f0565b6040516101d99190610f11565b60405180910390f35b6101fc60048036038101906101f79190610df9565b6106f6565b005b61021860048036038101906102139190610d9f565b6109d5565b6040516102259190610f11565b60405180910390f35b6102366109ed565b6040516102439190610ed6565b60405180910390f35b610254610a13565b005b610270600480360381019061026b9190610d9f565b610ccd565b60405161027d9190610f11565b60405180910390f35b61028e610ce5565b60405161029b9190610f11565b60405180910390f35b6102be60048036038101906102b99190610d9f565b610d48565b6040516102cb9190610f11565b60405180910390f35b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a7640000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610367610ce5565b610371919061101e565b600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103bb9190610fc4565b6103c59190610f93565b6103cf9190610f3d565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b33610405610ce5565b6004819055504260038190555061041b816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260005414156104ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e190610ef1565b60405180910390fd5b60026000819055508160076000828254610504919061101e565b9250508190555081600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461055a919061101e565b92505081905550813373ffffffffffffffffffffffffffffffffffffffff167f4cb6da433ea55f6e302b7bdbfeed740816a42301cde7f5bac5dff2b34037637460405160405180910390a36000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610604929190610ead565b602060405180830381600087803b15801561061e57600080fd5b505af1158015610632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106569190610dcc565b90508061068f576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060016000819055505050565b60045481565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606481565b60035481565b336106ff610ce5565b60048190555042600381905550610715816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260005414156107e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db90610ef1565b60405180910390fd5b6002600081905550816000811415610828576040517ff45911f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826007600082825461083a9190610f3d565b9250508190555082600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108909190610f3d565b92505081905550823373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d60405160405180910390a36000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161093c93929190610e76565b602060405180830381600087803b15801561095657600080fd5b505af115801561096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098e9190610dcc565b9050806109c7576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505060016000819055505050565b60086020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b33610a1c610ce5565b60048190555042600381905550610a32816102d4565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060026000541415610b01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af890610ef1565b60405180910390fd5b60026000819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550803373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe60405160405180910390a36000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610c35929190610ead565b602060405180830381600087803b158015610c4f57600080fd5b505af1158015610c63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c879190610dcc565b905080610cc0576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050600160008190555050565b60066020528060005260406000206000915090505481565b6000806007541415610cfb576004549050610d45565b600754670de0b6b3a7640000606460035442610d17919061101e565b610d219190610fc4565b610d2b9190610fc4565b610d359190610f93565b600454610d429190610f3d565b90505b90565b60056020528060005260406000206000915090505481565b600081359050610d6f8161115c565b92915050565b600081519050610d8481611173565b92915050565b600081359050610d998161118a565b92915050565b600060208284031215610db557610db461112e565b5b6000610dc384828501610d60565b91505092915050565b600060208284031215610de257610de161112e565b5b6000610df084828501610d75565b91505092915050565b600060208284031215610e0f57610e0e61112e565b5b6000610e1d84828501610d8a565b91505092915050565b610e2f81611052565b82525050565b610e3e8161109a565b82525050565b6000610e51601f83610f2c565b9150610e5c82611133565b602082019050919050565b610e7081611090565b82525050565b6000606082019050610e8b6000830186610e26565b610e986020830185610e26565b610ea56040830184610e67565b949350505050565b6000604082019050610ec26000830185610e26565b610ecf6020830184610e67565b9392505050565b6000602082019050610eeb6000830184610e35565b92915050565b60006020820190508181036000830152610f0a81610e44565b9050919050565b6000602082019050610f266000830184610e67565b92915050565b600082825260208201905092915050565b6000610f4882611090565b9150610f5383611090565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f8857610f876110d0565b5b828201905092915050565b6000610f9e82611090565b9150610fa983611090565b925082610fb957610fb86110ff565b5b828204905092915050565b6000610fcf82611090565b9150610fda83611090565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611013576110126110d0565b5b828202905092915050565b600061102982611090565b915061103483611090565b925082821015611047576110466110d0565b5b828203905092915050565b600061105d82611070565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006110a5826110ac565b9050919050565b60006110b7826110be565b9050919050565b60006110c982611070565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61116581611052565b811461117057600080fd5b50565b61117c81611064565b811461118757600080fd5b50565b61119381611090565b811461119e57600080fd5b5056fea2646970667358221220c48ed106f643afa8bfd7c0a8914c72e078e9bbf45667a081cdcdef79d3e2ae7264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA694FC3A GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xBEA08151 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xF245ACE4 EQ PUSH2 0x2A4 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xAB32EB69 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xADCA9B72 EQ PUSH2 0x22E JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x304AC91B GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x304AC91B EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x399080EC EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x5997BB37 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x6AA0838F EQ PUSH2 0x1C4 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xBD21C56 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x13C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH2 0xA13 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x367 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0xF93 JUMP JUMPDEST PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH2 0x405 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x41B DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x4EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E1 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4CB6DA433EA55F6E302B7BDBFEED740816A42301CDE7F5BAC5DFF2B340376374 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x604 SWAP3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x632 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x656 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x68F JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x6FF PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x715 DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DB SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF45911F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83A SWAP2 SWAP1 PUSH2 0xF3D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x890 SWAP2 SWAP1 PUSH2 0xF3D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x956 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x96A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98E SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH2 0xA1C PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0xA32 DUP2 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xB01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF8 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC35 SWAP3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC87 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0xCFB JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0xD17 SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0xD21 SWAP2 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH2 0xD35 SWAP2 SWAP1 PUSH2 0xF93 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xD42 SWAP2 SWAP1 PUSH2 0xF3D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD6F DUP2 PUSH2 0x115C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD84 DUP2 PUSH2 0x1173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD99 DUP2 PUSH2 0x118A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB5 JUMPI PUSH2 0xDB4 PUSH2 0x112E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDC3 DUP5 DUP3 DUP6 ADD PUSH2 0xD60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE2 JUMPI PUSH2 0xDE1 PUSH2 0x112E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDF0 DUP5 DUP3 DUP6 ADD PUSH2 0xD75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0F JUMPI PUSH2 0xE0E PUSH2 0x112E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE1D DUP5 DUP3 DUP6 ADD PUSH2 0xD8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE2F DUP2 PUSH2 0x1052 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE3E DUP2 PUSH2 0x109A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE51 PUSH1 0x1F DUP4 PUSH2 0xF2C JUMP JUMPDEST SWAP2 POP PUSH2 0xE5C DUP3 PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE70 DUP2 PUSH2 0x1090 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE8B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE26 JUMP JUMPDEST PUSH2 0xE98 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE26 JUMP JUMPDEST PUSH2 0xEA5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE67 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xEC2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE26 JUMP JUMPDEST PUSH2 0xECF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE67 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF0A DUP2 PUSH2 0xE44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF26 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF48 DUP3 PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP PUSH2 0xF53 DUP4 PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xF88 JUMPI PUSH2 0xF87 PUSH2 0x10D0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9E DUP3 PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA9 DUP4 PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFB9 JUMPI PUSH2 0xFB8 PUSH2 0x10FF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFCF DUP3 PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP PUSH2 0xFDA DUP4 PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1013 JUMPI PUSH2 0x1012 PUSH2 0x10D0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1029 DUP3 PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP PUSH2 0x1034 DUP4 PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1047 JUMPI PUSH2 0x1046 PUSH2 0x10D0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105D DUP3 PUSH2 0x1070 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A5 DUP3 PUSH2 0x10AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B7 DUP3 PUSH2 0x10BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C9 DUP3 PUSH2 0x1070 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1165 DUP2 PUSH2 0x1052 JUMP JUMPDEST DUP2 EQ PUSH2 0x1170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x117C DUP2 PUSH2 0x1064 JUMP JUMPDEST DUP2 EQ PUSH2 0x1187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1193 DUP2 PUSH2 0x1090 JUMP JUMPDEST DUP2 EQ PUSH2 0x119E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 DUP15 0xD1 MOD 0xF6 NUMBER 0xAF 0xA8 0xBF 0xD7 0xC0 0xA8 SWAP2 0x4C PUSH19 0xE078E9BBF45667A081CDCDEF79D3E2AE726473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "299:3871:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1849:223;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;341:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2716:350;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;747:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4059:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;663:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;710:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2184:416;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;942:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;375:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3128:348;;;:::i;:::-;;856:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1485:293;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;791:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1849:223;1903:7;2047:9;:18;2057:7;2047:18;;;;;;;;;;;;;;;;2039:4;1985:24;:33;2010:7;1985:33;;;;;;;;;;;;;;;;1966:16;:14;:16::i;:::-;:52;;;;:::i;:::-;1943:10;:19;1954:7;1943:19;;;;;;;;;;;;;;;;:76;;;;:::i;:::-;1942:101;;;;:::i;:::-;1941:124;;;;:::i;:::-;1922:143;;1849:223;;;:::o;341:28::-;;;;;;;;;;;;;:::o;2716:350::-;2772:10;3640:16;:14;:16::i;:::-;3615:22;:41;;;;3685:15;3666:16;:34;;;;3731:15;3738:7;3731:6;:15::i;:::-;3710:9;:18;3720:7;3710:18;;;;;;;;;;;;;;;:36;;;;3792:22;;3756:24;:33;3781:7;3756:33;;;;;;;;;;;;;;;:58;;;;1744:1:0::1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;2824:6:2::2;2807:13;;:23;;;;;;;:::i;:::-;;;;;;;;2866:6;2840:10;:22;2851:10;2840:22;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;2913:6;2901:10;2887:33;;;;;;;;;;;;2930:12;2945:14;;;;;;;;;;;:23;;;2969:10;2981:6;2945:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2930:58;;3003:7;2998:62;;3033:16;;;;;;;;;;;;;;2998:62;2797:269;1701:1:0::1;2628:7;:22;;;;2716:350:2::0;;:::o;747:37::-;;;;:::o;4059:109::-;4116:7;4142:10;:19;4153:7;4142:19;;;;;;;;;;;;;;;;4135:26;;4059:109;;;:::o;663:41::-;701:3;663:41;:::o;710:31::-;;;;:::o;2184:416::-;2253:10;3640:16;:14;:16::i;:::-;3615:22;:41;;;;3685:15;3666:16;:34;;;;3731:15;3738:7;3731:6;:15::i;:::-;3710:9;:18;3720:7;3710:18;;;;;;;;;;;;;;;:36;;;;3792:22;;3756:24;:33;3781:7;3756:33;;;;;;;;;;;;;;;:58;;;;1744:1:0::1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;2307:6:2::2;3900:1;3890:6;:11;3886:68;;;3924:19;;;;;;;;;;;;;;3886:68;2346:6:::3;2329:13;;:23;;;;;;;:::i;:::-;;;;;;;;2388:6;2362:10;:22;2373:10;2362:22;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;2428:6;2416:10;2409:26;;;;;;;;;;;;2445:12;2460:14;;;;;;;;;;;:27;;;2488:10;2508:4;2515:6;2460:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2445:77;;2537:7;2532:62;;2567:16;;;;;;;;;;;;;;2532:62;2319:281;2484:1:0::2;1701::::1;2628:7;:22;;;;2184:416:2::0;;:::o;942:45::-;;;;;;;;;;;;;;;;;:::o;375:28::-;;;;;;;;;;;;;:::o;3128:348::-;3173:10;3640:16;:14;:16::i;:::-;3615:22;:41;;;;3685:15;3666:16;:34;;;;3731:15;3738:7;3731:6;:15::i;:::-;3710:9;:18;3720:7;3710:18;;;;;;;;;;;;;;;:36;;;;3792:22;;3756:24;:33;3781:7;3756:33;;;;;;;;;;;;;;;:58;;;;1744:1:0::1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;3208:14:2::2;3225:9;:21;3235:10;3225:21;;;;;;;;;;;;;;;;3208:38;;3280:1;3256:9;:21;3266:10;3256:21;;;;;;;;;;;;;;;:25;;;;3323:6;3311:10;3296:34;;;;;;;;;;;;3340:12;3355:14;;;;;;;;;;;:23;;;3379:10;3391:6;3355:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3340:58;;3413:7;3408:62;;3443:16;;;;;;;;;;;;;;3408:62;3198:278;;1701:1:0::1;2628:7;:22;;;;3128:348:2::0;:::o;856:44::-;;;;;;;;;;;;;;;;;:::o;1485:293::-;1532:7;1572:1;1555:13;;:18;1551:78;;;1596:22;;1589:29;;;;1551:78;1757:13;;1749:4;701:3;1715:16;;1697:15;:34;;;;:::i;:::-;1696:50;;;;:::i;:::-;:57;;;;:::i;:::-;1695:75;;;;:::i;:::-;1657:22;;:114;;;;:::i;:::-;1638:133;;1485:293;;:::o;791:59::-;;;;;;;;;;;;;;;;;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:329::-;499:6;548:2;536:9;527:7;523:23;519:32;516:119;;;554:79;;:::i;:::-;516:119;674:1;699:53;744:7;735:6;724:9;720:22;699:53;:::i;:::-;689:63;;645:117;440:329;;;;:::o;775:345::-;842:6;891:2;879:9;870:7;866:23;862:32;859:119;;;897:79;;:::i;:::-;859:119;1017:1;1042:61;1095:7;1086:6;1075:9;1071:22;1042:61;:::i;:::-;1032:71;;988:125;775:345;;;;:::o;1126:329::-;1185:6;1234:2;1222:9;1213:7;1209:23;1205:32;1202:119;;;1240:79;;:::i;:::-;1202:119;1360:1;1385:53;1430:7;1421:6;1410:9;1406:22;1385:53;:::i;:::-;1375:63;;1331:117;1126:329;;;;:::o;1461:118::-;1548:24;1566:5;1548:24;:::i;:::-;1543:3;1536:37;1461:118;;:::o;1585:159::-;1686:51;1731:5;1686:51;:::i;:::-;1681:3;1674:64;1585:159;;:::o;1750:366::-;1892:3;1913:67;1977:2;1972:3;1913:67;:::i;:::-;1906:74;;1989:93;2078:3;1989:93;:::i;:::-;2107:2;2102:3;2098:12;2091:19;;1750:366;;;:::o;2122:118::-;2209:24;2227:5;2209:24;:::i;:::-;2204:3;2197:37;2122:118;;:::o;2246:442::-;2395:4;2433:2;2422:9;2418:18;2410:26;;2446:71;2514:1;2503:9;2499:17;2490:6;2446:71;:::i;:::-;2527:72;2595:2;2584:9;2580:18;2571:6;2527:72;:::i;:::-;2609;2677:2;2666:9;2662:18;2653:6;2609:72;:::i;:::-;2246:442;;;;;;:::o;2694:332::-;2815:4;2853:2;2842:9;2838:18;2830:26;;2866:71;2934:1;2923:9;2919:17;2910:6;2866:71;:::i;:::-;2947:72;3015:2;3004:9;3000:18;2991:6;2947:72;:::i;:::-;2694:332;;;;;:::o;3032:250::-;3139:4;3177:2;3166:9;3162:18;3154:26;;3190:85;3272:1;3261:9;3257:17;3248:6;3190:85;:::i;:::-;3032:250;;;;:::o;3288:419::-;3454:4;3492:2;3481:9;3477:18;3469:26;;3541:9;3535:4;3531:20;3527:1;3516:9;3512:17;3505:47;3569:131;3695:4;3569:131;:::i;:::-;3561:139;;3288:419;;;:::o;3713:222::-;3806:4;3844:2;3833:9;3829:18;3821:26;;3857:71;3925:1;3914:9;3910:17;3901:6;3857:71;:::i;:::-;3713:222;;;;:::o;4022:169::-;4106:11;4140:6;4135:3;4128:19;4180:4;4175:3;4171:14;4156:29;;4022:169;;;;:::o;4197:305::-;4237:3;4256:20;4274:1;4256:20;:::i;:::-;4251:25;;4290:20;4308:1;4290:20;:::i;:::-;4285:25;;4444:1;4376:66;4372:74;4369:1;4366:81;4363:107;;;4450:18;;:::i;:::-;4363:107;4494:1;4491;4487:9;4480:16;;4197:305;;;;:::o;4508:185::-;4548:1;4565:20;4583:1;4565:20;:::i;:::-;4560:25;;4599:20;4617:1;4599:20;:::i;:::-;4594:25;;4638:1;4628:35;;4643:18;;:::i;:::-;4628:35;4685:1;4682;4678:9;4673:14;;4508:185;;;;:::o;4699:348::-;4739:7;4762:20;4780:1;4762:20;:::i;:::-;4757:25;;4796:20;4814:1;4796:20;:::i;:::-;4791:25;;4984:1;4916:66;4912:74;4909:1;4906:81;4901:1;4894:9;4887:17;4883:105;4880:131;;;4991:18;;:::i;:::-;4880:131;5039:1;5036;5032:9;5021:20;;4699:348;;;;:::o;5053:191::-;5093:4;5113:20;5131:1;5113:20;:::i;:::-;5108:25;;5147:20;5165:1;5147:20;:::i;:::-;5142:25;;5186:1;5183;5180:8;5177:34;;;5191:18;;:::i;:::-;5177:34;5236:1;5233;5229:9;5221:17;;5053:191;;;;:::o;5250:96::-;5287:7;5316:24;5334:5;5316:24;:::i;:::-;5305:35;;5250:96;;;:::o;5352:90::-;5386:7;5429:5;5422:13;5415:21;5404:32;;5352:90;;;:::o;5448:126::-;5485:7;5525:42;5518:5;5514:54;5503:65;;5448:126;;;:::o;5580:77::-;5617:7;5646:5;5635:16;;5580:77;;;:::o;5663:140::-;5727:9;5760:37;5791:5;5760:37;:::i;:::-;5747:50;;5663:140;;;:::o;5809:126::-;5859:9;5892:37;5923:5;5892:37;:::i;:::-;5879:50;;5809:126;;;:::o;5941:113::-;5991:9;6024:24;6042:5;6024:24;:::i;:::-;6011:37;;5941:113;;;:::o;6060:180::-;6108:77;6105:1;6098:88;6205:4;6202:1;6195:15;6229:4;6226:1;6219:15;6246:180;6294:77;6291:1;6284:88;6391:4;6388:1;6381:15;6415:4;6412:1;6405:15;6555:117;6664:1;6661;6654:12;6678:181;6818:33;6814:1;6806:6;6802:14;6795:57;6678:181;:::o;6865:122::-;6938:24;6956:5;6938:24;:::i;:::-;6931:5;6928:35;6918:63;;6977:1;6974;6967:12;6918:63;6865:122;:::o;6993:116::-;7063:21;7078:5;7063:21;:::i;:::-;7056:5;7053:32;7043:60;;7099:1;7096;7089:12;7043:60;6993:116;:::o;7115:122::-;7188:24;7206:5;7188:24;:::i;:::-;7181:5;7178:35;7168:63;;7227:1;7224;7217:12;7168:63;7115:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "913400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"REWARD_RATE()": "396",
								"claimReward()": "infinite",
								"earned(address)": "infinite",
								"getStaked(address)": "2886",
								"rewardPerToken()": "infinite",
								"s_balances(address)": "2859",
								"s_lastUpdateTime()": "2518",
								"s_rewardPerTokenStored()": "2452",
								"s_rewards(address)": "2858",
								"s_rewardsToken()": "2646",
								"s_stakingToken()": "2667",
								"s_userRewardPerTokenPaid(address)": "2902",
								"stake(uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 299,
									"end": 4170,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 299,
									"end": 4170,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 299,
									"end": 4170,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1292,
									"end": 1304,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 1282,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1268,
									"end": 1282,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 1305,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1339,
									"end": 1351,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1329,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1315,
									"end": 1329,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1359,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 299,
									"end": 4170,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 299,
									"end": 4170,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 260,
									"end": 379,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 260,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 260,
									"end": 379,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 499,
									"end": 506,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 490,
									"end": 496,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 475,
									"end": 497,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 433,
									"end": 507,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 433,
									"end": 507,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 389,
									"end": 517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 638,
									"end": 645,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 618,
									"end": 627,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 614,
									"end": 636,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 572,
									"end": 646,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 572,
									"end": 646,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 527,
									"end": 656,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 787,
									"end": 794,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 834,
									"end": 839,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 805,
									"end": 840,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 805,
									"end": 840,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 750,
									"end": 846,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 889,
									"end": 896,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 922,
									"end": 927,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 918,
									"end": 972,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 907,
									"end": 972,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 907,
									"end": 972,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 852,
									"end": 978,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1214,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1206,
									"end": 1218,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1321,
									"end": 1326,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1293,
									"end": 1328,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1342,
									"end": 1343,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1332,
									"end": 1344,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 299,
									"end": 4170,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 299,
									"end": 4170,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 299,
									"end": 4170,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 299,
									"end": 4170,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 299,
									"end": 4170,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 299,
									"end": 4170,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 4170,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 299,
									"end": 4170,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 4170,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c48ed106f643afa8bfd7c0a8914c72e078e9bbf45667a081cdcdef79d3e2ae7264736f6c63430008070033",
									".code": [
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "A694FC3A"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "B88A802F"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "B88A802F"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "BEA08151"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "CD3DAF9D"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "F245ACE4"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "A694FC3A"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "AB32EB69"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "ADCA9B72"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "304AC91B"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "304AC91B"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "399080EC"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "5997BB37"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "6AA0838F"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "8CC262"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "BD21C56"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "2E1A7D4D"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 299,
											"end": 4170,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 747,
											"end": 784,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 747,
											"end": 784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 747,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 747,
											"end": 784,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 747,
											"end": 784,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 747,
											"end": 784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 784,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 784,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 747,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 747,
											"end": 784,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 747,
											"end": 784,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 747,
											"end": 784,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 747,
											"end": 784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 784,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 784,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 747,
											"end": 784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 784,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 784,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 747,
											"end": 784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 784,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 663,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 663,
											"end": 704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 663,
											"end": 704,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 710,
											"end": 741,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 710,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 710,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 710,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 710,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 710,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 710,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 710,
											"end": 741,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 710,
											"end": 741,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 710,
											"end": 741,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 710,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 710,
											"end": 741,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3476,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3128,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3128,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3128,
											"end": 3476,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3128,
											"end": 3476,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3128,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3476,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2064,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2043,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2017,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2018,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1966,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1966,
											"end": 1982,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1966,
											"end": 1982,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1966,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1966,
											"end": 2018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2018,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1966,
											"end": 2018,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1966,
											"end": 2018,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1966,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1953,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1961,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1943,
											"end": 2019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1943,
											"end": 2019,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1943,
											"end": 2019,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1943,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1942,
											"end": 2043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 2043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1942,
											"end": 2043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1942,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1942,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1941,
											"end": 2065,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1941,
											"end": 2065,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1941,
											"end": 2065,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1941,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 2065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 2065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 2072,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 341,
											"end": 369,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 341,
											"end": 369,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2772,
											"end": 2782,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3640,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3640,
											"end": 3656,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3640,
											"end": 3656,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3640,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3637,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3682,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3738,
											"end": 3745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3731,
											"end": 3746,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3731,
											"end": 3746,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3731,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3719,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3746,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3814,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3792,
											"end": 3814,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3780,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3788,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3814,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3814,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2807,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 2861,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2911,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "4CB6DA433EA55F6E302B7BDBFEED740816A42301CDE7F5BAC5DFF2B340376374"
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2945,
											"end": 2968,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2969,
											"end": 2979,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2945,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3010,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2998,
											"end": 3060,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3060,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2998,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 3066,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 747,
											"end": 784,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 747,
											"end": 784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 784,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 747,
											"end": 784,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 747,
											"end": 784,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 784,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4116,
											"end": 4123,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4152,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4153,
											"end": 4160,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4161,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4135,
											"end": 4161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4135,
											"end": 4161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4168,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 701,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 710,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 710,
											"end": 741,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 710,
											"end": 741,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2263,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3640,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3640,
											"end": 3656,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3640,
											"end": 3656,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3640,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3637,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3682,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3738,
											"end": 3745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3731,
											"end": 3746,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3731,
											"end": 3746,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3731,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3719,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3746,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3814,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3792,
											"end": 3814,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3780,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3788,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3814,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3814,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3900,
											"end": 3901,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3890,
											"end": 3901,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 3954,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3886,
											"end": 3954,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "PUSH",
											"source": 2,
											"value": "F45911F000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 3954,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3886,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2352,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2329,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2384,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2428,
											"end": 2434,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2426,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2435,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2409,
											"end": 2435,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2435,
											"name": "PUSH",
											"source": 2,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 2409,
											"end": 2435,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2409,
											"end": 2435,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2435,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2409,
											"end": 2435,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2435,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2435,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2435,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2474,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2460,
											"end": 2474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2474,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2474,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2460,
											"end": 2474,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2474,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2474,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2460,
											"end": 2474,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2487,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2460,
											"end": 2487,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2487,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2488,
											"end": 2498,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2508,
											"end": 2512,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2460,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2532,
											"end": 2594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2583,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2567,
											"end": 2583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2583,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2567,
											"end": 2583,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2583,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2583,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2583,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2583,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2594,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2532,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2600,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 987,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 942,
											"end": 987,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 375,
											"end": 403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 375,
											"end": 403,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3128,
											"end": 3476,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3128,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3173,
											"end": 3183,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3640,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3640,
											"end": 3656,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3640,
											"end": 3656,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3640,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3637,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3682,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3738,
											"end": 3745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3731,
											"end": 3746,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3731,
											"end": 3746,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3731,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3719,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3746,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3814,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3792,
											"end": 3814,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3780,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3788,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3789,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3814,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3814,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3245,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3208,
											"end": 3246,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3208,
											"end": 3246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3265,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3276,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3281,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3311,
											"end": 3321,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "PUSH",
											"source": 2,
											"value": "FC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE"
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3352,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3355,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3369,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3355,
											"end": 3369,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3369,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3355,
											"end": 3369,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3355,
											"end": 3378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3378,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 3379,
											"end": 3389,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3397,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3355,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3408,
											"end": 3470,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "PUSH",
											"source": 2,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3470,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3408,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3198,
											"end": 3476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3198,
											"end": 3476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3476,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 900,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1539,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1629,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1551,
											"end": 1629,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1596,
											"end": 1618,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1629,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1551,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1770,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1757,
											"end": 1770,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 701,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1715,
											"end": 1731,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1697,
											"end": 1731,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1697,
											"end": 1731,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1697,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1697,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1696,
											"end": 1746,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1696,
											"end": 1746,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1696,
											"end": 1746,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1696,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1696,
											"end": 1753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1696,
											"end": 1753,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1696,
											"end": 1753,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1696,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1695,
											"end": 1770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 1770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1695,
											"end": 1770,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1695,
											"end": 1770,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1695,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1657,
											"end": 1771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1657,
											"end": 1771,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1657,
											"end": 1771,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1657,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1778,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 791,
											"end": 850,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 769,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 440,
											"end": 769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 505,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 545,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 527,
											"end": 534,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 523,
											"end": 546,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 519,
											"end": 551,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 516,
											"end": 635,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 516,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 516,
											"end": 635,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 554,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 516,
											"end": 635,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 516,
											"end": 635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 744,
											"end": 751,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 735,
											"end": 741,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 724,
											"end": 733,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 720,
											"end": 742,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 699,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 689,
											"end": 752,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 689,
											"end": 752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 762,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 769,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 440,
											"end": 769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 440,
											"end": 769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 769,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 893,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 888,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 870,
											"end": 877,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 866,
											"end": 889,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 862,
											"end": 894,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 859,
											"end": 978,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 859,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 859,
											"end": 978,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 897,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 859,
											"end": 978,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 859,
											"end": 978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1095,
											"end": 1102,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1086,
											"end": 1092,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1093,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1103,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1232,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1237,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1430,
											"end": 1437,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1421,
											"end": 1427,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1410,
											"end": 1419,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1406,
											"end": 1428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1438,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1438,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1461,
											"end": 1579,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1461,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1546,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1579,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1585,
											"end": 1744,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1585,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1731,
											"end": 1736,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1686,
											"end": 1737,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1686,
											"end": 1737,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1686,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1738,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1744,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1750,
											"end": 2116,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1750,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 1895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1977,
											"end": 1979,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1972,
											"end": 1975,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1913,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1913,
											"end": 1980,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1913,
											"end": 1980,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1913,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1980,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1980,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2078,
											"end": 2081,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1989,
											"end": 2082,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1989,
											"end": 2082,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1989,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 2109,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2105,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2110,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 2116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 2116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 2116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 2116,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2122,
											"end": 2240,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2122,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2227,
											"end": 2232,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2209,
											"end": 2233,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2209,
											"end": 2233,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2209,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2197,
											"end": 2234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2240,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2246,
											"end": 2688,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2246,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2435,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2422,
											"end": 2431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2418,
											"end": 2436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2512,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2490,
											"end": 2496,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2446,
											"end": 2517,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2446,
											"end": 2517,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2446,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2595,
											"end": 2597,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2598,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 2577,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2527,
											"end": 2599,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2527,
											"end": 2599,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2527,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2677,
											"end": 2679,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2675,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2662,
											"end": 2680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2659,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2609,
											"end": 2681,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2609,
											"end": 2681,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2609,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2688,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2688,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2688,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2694,
											"end": 3026,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2694,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2853,
											"end": 2855,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2934,
											"end": 2935,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2932,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2919,
											"end": 2936,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2910,
											"end": 2916,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2866,
											"end": 2937,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2866,
											"end": 2937,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2866,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3015,
											"end": 3017,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3013,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3000,
											"end": 3018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2947,
											"end": 3019,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2947,
											"end": 3019,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2947,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2694,
											"end": 3026,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2694,
											"end": 3026,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2694,
											"end": 3026,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2694,
											"end": 3026,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2694,
											"end": 3026,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2694,
											"end": 3026,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3032,
											"end": 3282,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3032,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3139,
											"end": 3143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3179,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3272,
											"end": 3273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3270,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3254,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3190,
											"end": 3275,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3190,
											"end": 3275,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3190,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3032,
											"end": 3282,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3032,
											"end": 3282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3032,
											"end": 3282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3032,
											"end": 3282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3032,
											"end": 3282,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3288,
											"end": 3707,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3288,
											"end": 3707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3454,
											"end": 3458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3492,
											"end": 3494,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3481,
											"end": 3490,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3477,
											"end": 3495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3469,
											"end": 3495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3469,
											"end": 3495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3541,
											"end": 3550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3535,
											"end": 3539,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3531,
											"end": 3551,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3527,
											"end": 3528,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3525,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3505,
											"end": 3552,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3569,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3695,
											"end": 3699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3569,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3569,
											"end": 3700,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3569,
											"end": 3700,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3569,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3288,
											"end": 3707,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3288,
											"end": 3707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3288,
											"end": 3707,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3288,
											"end": 3707,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3713,
											"end": 3935,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3713,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3846,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3829,
											"end": 3847,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3821,
											"end": 3847,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3821,
											"end": 3847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 3857,
											"end": 3928,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3857,
											"end": 3928,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 3857,
											"end": 3928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3935,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3935,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3935,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3935,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3935,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4022,
											"end": 4191,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4022,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4117,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4146,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4135,
											"end": 4138,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4147,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4178,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4185,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4156,
											"end": 4185,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4156,
											"end": 4185,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4022,
											"end": 4191,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4022,
											"end": 4191,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4022,
											"end": 4191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4022,
											"end": 4191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4022,
											"end": 4191,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4197,
											"end": 4502,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4197,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4274,
											"end": 4275,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4256,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4256,
											"end": 4276,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4256,
											"end": 4276,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4256,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4285,
											"end": 4310,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4285,
											"end": 4310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4444,
											"end": 4445,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4376,
											"end": 4442,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4446,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4447,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4363,
											"end": 4470,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4363,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 4363,
											"end": 4470,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4450,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 4450,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4450,
											"end": 4468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4450,
											"end": 4468,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 4450,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4363,
											"end": 4470,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 4363,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4494,
											"end": 4495,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4491,
											"end": 4492,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4496,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4502,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4502,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4502,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4508,
											"end": 4693,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4508,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4548,
											"end": 4549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 4583,
											"end": 4584,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4565,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4565,
											"end": 4585,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4565,
											"end": 4585,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 4565,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4560,
											"end": 4585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4560,
											"end": 4585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4599,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 4617,
											"end": 4618,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4599,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4599,
											"end": 4619,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4599,
											"end": 4619,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 4599,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4594,
											"end": 4619,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4594,
											"end": 4619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4638,
											"end": 4639,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4628,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4628,
											"end": 4663,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4628,
											"end": 4663,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4628,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4685,
											"end": 4686,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4682,
											"end": 4683,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4678,
											"end": 4687,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4673,
											"end": 4687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4673,
											"end": 4687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4693,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4693,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4693,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4699,
											"end": 5047,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4699,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4739,
											"end": 4746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4780,
											"end": 4781,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4762,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4762,
											"end": 4782,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4762,
											"end": 4782,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4762,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4782,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4796,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 4814,
											"end": 4815,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4796,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4796,
											"end": 4816,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4796,
											"end": 4816,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 4796,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4791,
											"end": 4816,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4791,
											"end": 4816,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4984,
											"end": 4985,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4916,
											"end": 4982,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4912,
											"end": 4986,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4909,
											"end": 4910,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4987,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4901,
											"end": 4902,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 4903,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4887,
											"end": 4904,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4883,
											"end": 4988,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4880,
											"end": 5011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4880,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4880,
											"end": 5011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 4991,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4991,
											"end": 5009,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4991,
											"end": 5009,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 4991,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4880,
											"end": 5011,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4880,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5036,
											"end": 5037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5032,
											"end": 5041,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 5047,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 5047,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 5047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 5047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 5047,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5053,
											"end": 5244,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5053,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5097,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 5131,
											"end": 5132,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5108,
											"end": 5133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5108,
											"end": 5133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5147,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 5165,
											"end": 5166,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5147,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 5147,
											"end": 5167,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5147,
											"end": 5167,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 5147,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5167,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5186,
											"end": 5187,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5183,
											"end": 5184,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5188,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5177,
											"end": 5211,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5177,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 5177,
											"end": 5211,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 5191,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5191,
											"end": 5209,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5191,
											"end": 5209,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 5191,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5177,
											"end": 5211,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 5177,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5236,
											"end": 5237,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5233,
											"end": 5234,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5221,
											"end": 5238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5221,
											"end": 5238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5244,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5244,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5244,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5250,
											"end": 5346,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5250,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5287,
											"end": 5294,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 5334,
											"end": 5339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5305,
											"end": 5340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5305,
											"end": 5340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5250,
											"end": 5346,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5250,
											"end": 5346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5250,
											"end": 5346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5250,
											"end": 5346,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5352,
											"end": 5442,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 5352,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5422,
											"end": 5435,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5415,
											"end": 5436,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5404,
											"end": 5436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5404,
											"end": 5436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5352,
											"end": 5442,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5352,
											"end": 5442,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5352,
											"end": 5442,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5352,
											"end": 5442,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5448,
											"end": 5574,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 5448,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5485,
											"end": 5492,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5518,
											"end": 5523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5503,
											"end": 5568,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5503,
											"end": 5568,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5448,
											"end": 5574,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5448,
											"end": 5574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5448,
											"end": 5574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5448,
											"end": 5574,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5580,
											"end": 5657,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 5580,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5617,
											"end": 5624,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5646,
											"end": 5651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5635,
											"end": 5651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5635,
											"end": 5651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5580,
											"end": 5657,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5580,
											"end": 5657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5580,
											"end": 5657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5580,
											"end": 5657,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5663,
											"end": 5803,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 5663,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5727,
											"end": 5736,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5760,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 5791,
											"end": 5796,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5760,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 5760,
											"end": 5797,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5760,
											"end": 5797,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 5760,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5663,
											"end": 5803,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5663,
											"end": 5803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5663,
											"end": 5803,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5663,
											"end": 5803,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5809,
											"end": 5935,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 5809,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5859,
											"end": 5868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5892,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 5923,
											"end": 5928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5892,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 5892,
											"end": 5929,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5892,
											"end": 5929,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 5892,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5879,
											"end": 5929,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5879,
											"end": 5929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5809,
											"end": 5935,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5809,
											"end": 5935,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5809,
											"end": 5935,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5809,
											"end": 5935,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5941,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 5941,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5991,
											"end": 6000,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 6042,
											"end": 6047,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6011,
											"end": 6048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6011,
											"end": 6048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5941,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5941,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5941,
											"end": 6054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5941,
											"end": 6054,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6060,
											"end": 6240,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6060,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6108,
											"end": 6185,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6105,
											"end": 6106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6098,
											"end": 6186,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6205,
											"end": 6209,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6229,
											"end": 6233,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6226,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6234,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6246,
											"end": 6426,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6246,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6371,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6291,
											"end": 6292,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6284,
											"end": 6372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6391,
											"end": 6395,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 6388,
											"end": 6389,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6381,
											"end": 6396,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6415,
											"end": 6419,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6412,
											"end": 6413,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6420,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6555,
											"end": 6672,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 6555,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6664,
											"end": 6665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6654,
											"end": 6666,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6678,
											"end": 6859,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6678,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6851,
											"name": "PUSH",
											"source": 3,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 6814,
											"end": 6815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6802,
											"end": 6816,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6795,
											"end": 6852,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6678,
											"end": 6859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6678,
											"end": 6859,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6865,
											"end": 6987,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 6865,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6938,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 6956,
											"end": 6961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6938,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 6938,
											"end": 6962,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6938,
											"end": 6962,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 6938,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 6963,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6918,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 6918,
											"end": 6981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6977,
											"end": 6978,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 6975,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6967,
											"end": 6979,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6918,
											"end": 6981,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 6918,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6987,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6987,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6993,
											"end": 7109,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 6993,
											"end": 7109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 7078,
											"end": 7083,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 7063,
											"end": 7084,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7063,
											"end": 7084,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 7063,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7056,
											"end": 7061,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7043,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 7043,
											"end": 7103,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7099,
											"end": 7100,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7096,
											"end": 7097,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7101,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7043,
											"end": 7103,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 7043,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6993,
											"end": 7109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6993,
											"end": 7109,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7115,
											"end": 7237,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 7115,
											"end": 7237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7188,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 7206,
											"end": 7211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7188,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7188,
											"end": 7212,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7188,
											"end": 7212,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 7188,
											"end": 7212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7181,
											"end": 7186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7213,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 7168,
											"end": 7231,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7227,
											"end": 7228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7224,
											"end": 7225,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7217,
											"end": 7229,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7231,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 7168,
											"end": 7231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7115,
											"end": 7237,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7115,
											"end": 7237,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"REWARD_RATE()": "5997bb37",
							"claimReward()": "b88a802f",
							"earned(address)": "008cc262",
							"getStaked(address)": "399080ec",
							"rewardPerToken()": "cd3daf9d",
							"s_balances(address)": "ab32eb69",
							"s_lastUpdateTime()": "6aa0838f",
							"s_rewardPerTokenStored()": "304ac91b",
							"s_rewards(address)": "bea08151",
							"s_rewardsToken()": "0bd21c56",
							"s_stakingToken()": "adca9b72",
							"s_userRewardPerTokenPaid(address)": "f245ace4",
							"stake(uint256)": "a694fc3a",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NeedsMoreThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrewStake\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REWARD_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"stake(uint256)\":{\"params\":{\"amount\":\"| How much to stake\"}},\"withdraw(uint256)\":{\"params\":{\"amount\":\"| How much to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimReward()\":{\"notice\":\"User claims their tokens\"},\"earned(address)\":{\"notice\":\"How much reward a user has earned\"},\"rewardPerToken()\":{\"notice\":\"How much reward a token gets based on how long it's been in and during which \\\"snapshots\\\"\"},\"stake(uint256)\":{\"notice\":\"Deposit tokens into this contract\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw tokens from this contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DeFi/DeFiStaking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/DeFi/DeFiStaking.sol\":{\"keccak256\":\"0x91bf712759ac06d9c6b6145d1c8b75b4441e76257cfbd568682f9bb035babe04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33c42b515d74cbf6ba2eafe60a911fcb570182004298586b0e4826aa7fab090c\",\"dweb:/ipfs/QmVJCnqEbjeMvxK6xtGa3TSP7M1DvGQgAUG54MiAS7TXTe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/DeFi/DeFiStaking.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 130,
								"contract": "contracts/DeFi/DeFiStaking.sol:Staking",
								"label": "s_rewardsToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)117"
							},
							{
								"astId": 133,
								"contract": "contracts/DeFi/DeFiStaking.sol:Staking",
								"label": "s_stakingToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)117"
							},
							{
								"astId": 138,
								"contract": "contracts/DeFi/DeFiStaking.sol:Staking",
								"label": "s_lastUpdateTime",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 140,
								"contract": "contracts/DeFi/DeFiStaking.sol:Staking",
								"label": "s_rewardPerTokenStored",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 144,
								"contract": "contracts/DeFi/DeFiStaking.sol:Staking",
								"label": "s_userRewardPerTokenPaid",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 148,
								"contract": "contracts/DeFi/DeFiStaking.sol:Staking",
								"label": "s_rewards",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 150,
								"contract": "contracts/DeFi/DeFiStaking.sol:Staking",
								"label": "s_totalSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 154,
								"contract": "contracts/DeFi/DeFiStaking.sol:Staking",
								"label": "s_balances",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)117": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claimReward()": {
								"notice": "User claims their tokens"
							},
							"earned(address)": {
								"notice": "How much reward a user has earned"
							},
							"rewardPerToken()": {
								"notice": "How much reward a token gets based on how long it's been in and during which \"snapshots\""
							},
							"stake(uint256)": {
								"notice": "Deposit tokens into this contract"
							},
							"withdraw(uint256)": {
								"notice": "Withdraw tokens from this contract"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							39
						]
					},
					"id": 40,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1661:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1708:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1752:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1796:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:0"
									},
									"scope": 39,
									"src": "1782:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2236:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2325:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 23,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2336:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2638:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 38,
									"name": "nonReentrant",
									"nameLocation": "2221:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:0"
									},
									"src": "2212:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 40,
							"src": "873:1786:0",
							"usedErrors": []
						}
					],
					"src": "97:2563:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							117
						]
					},
					"id": 118,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 41,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 51,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 60,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 117,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 117,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 117,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 117,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 117,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 117,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 118,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"contracts/DeFi/DeFiStaking.sol": {
				"ast": {
					"absolutePath": "contracts/DeFi/DeFiStaking.sol",
					"exportedSymbols": {
						"IERC20": [
							117
						],
						"NeedsMoreThanZero": [
							125
						],
						"ReentrancyGuard": [
							39
						],
						"Staking": [
							454
						],
						"TransferFailed": [
							123
						]
					},
					"id": 455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 455,
							"sourceUnit": 40,
							"src": "126:62:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 455,
							"sourceUnit": 118,
							"src": "189:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 123,
							"name": "TransferFailed",
							"nameLocation": "253:14:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 122,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "267:2:2"
							},
							"src": "247:23:2"
						},
						{
							"id": 125,
							"name": "NeedsMoreThanZero",
							"nameLocation": "277:17:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 124,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "294:2:2"
							},
							"src": "271:26:2"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 126,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "319:15:2"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "319:15:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 454,
							"linearizedBaseContracts": [
								454,
								39
							],
							"name": "Staking",
							"nameLocation": "308:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0bd21c56",
									"id": 130,
									"mutability": "mutable",
									"name": "s_rewardsToken",
									"nameLocation": "355:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "341:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$117",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 129,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 128,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 117,
											"src": "341:6:2"
										},
										"referencedDeclaration": 117,
										"src": "341:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$117",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "adca9b72",
									"id": 133,
									"mutability": "mutable",
									"name": "s_stakingToken",
									"nameLocation": "389:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "375:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$117",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 132,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 131,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 117,
											"src": "375:6:2"
										},
										"referencedDeclaration": 117,
										"src": "375:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$117",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5997bb37",
									"id": 136,
									"mutability": "constant",
									"name": "REWARD_RATE",
									"nameLocation": "687:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "663:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 134,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "663:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 135,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "701:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6aa0838f",
									"id": 138,
									"mutability": "mutable",
									"name": "s_lastUpdateTime",
									"nameLocation": "725:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "710:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "710:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "304ac91b",
									"id": 140,
									"mutability": "mutable",
									"name": "s_rewardPerTokenStored",
									"nameLocation": "762:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "747:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 139,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "747:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f245ace4",
									"id": 144,
									"mutability": "mutable",
									"name": "s_userRewardPerTokenPaid",
									"nameLocation": "826:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "791:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 143,
										"keyType": {
											"id": 141,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "799:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "791:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 142,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "810:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bea08151",
									"id": 148,
									"mutability": "mutable",
									"name": "s_rewards",
									"nameLocation": "891:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "856:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 147,
										"keyType": {
											"id": 145,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "864:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "856:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 146,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "875:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 150,
									"mutability": "mutable",
									"name": "s_totalSupply",
									"nameLocation": "923:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "907:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 149,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "907:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ab32eb69",
									"id": 154,
									"mutability": "mutable",
									"name": "s_balances",
									"nameLocation": "977:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 454,
									"src": "942:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 153,
										"keyType": {
											"id": 151,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "950:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "942:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 152,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "961:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 160,
									"name": "Staked",
									"nameLocation": "1000:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1023:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1007:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1045:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1029:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:46:2"
									},
									"src": "994:59:2"
								},
								{
									"anonymous": false,
									"id": 166,
									"name": "WithdrewStake",
									"nameLocation": "1064:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1094:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1078:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1116:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1100:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:46:2"
									},
									"src": "1058:66:2"
								},
								{
									"anonymous": false,
									"id": 172,
									"name": "RewardsClaimed",
									"nameLocation": "1135:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1166:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1150:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1188:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1172:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1149:46:2"
									},
									"src": "1129:67:2"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "1258:101:2",
										"statements": [
											{
												"expression": {
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "s_stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "1268:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 181,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "1292:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 180,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "1285:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$117_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1285:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"src": "1268:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "1268:37:2"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "s_rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1315:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 187,
																"name": "rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "1339:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 186,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "1332:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$117_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1332:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"src": "1315:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "1315:37:2"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "stakingToken",
												"nameLocation": "1222:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1214:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1214:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "rewardsToken",
												"nameLocation": "1244:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1236:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1236:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:44:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1258:0:2"
									},
									"scope": 454,
									"src": "1202:157:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1541:237:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 198,
														"name": "s_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1555:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1572:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1555:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 204,
												"nodeType": "IfStatement",
												"src": "1551:78:2",
												"trueBody": {
													"id": 203,
													"nodeType": "Block",
													"src": "1575:54:2",
													"statements": [
														{
															"expression": {
																"id": 201,
																"name": "s_rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "1596:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 197,
															"id": 202,
															"nodeType": "Return",
															"src": "1589:29:2"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 205,
														"name": "s_rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "1657:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 209,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 206,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "1697:5:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 207,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "timestamp",
																								"nodeType": "MemberAccess",
																								"src": "1697:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 208,
																								"name": "s_lastUpdateTime",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 138,
																								"src": "1715:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1697:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 210,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1696:36:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 211,
																					"name": "REWARD_RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 136,
																					"src": "1735:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1696:50:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31653138",
																				"id": 213,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1749:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			},
																			"src": "1696:57:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 215,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1695:59:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 216,
																	"name": "s_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "1757:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1695:75:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 218,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1694:77:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1657:114:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 197,
												"id": 220,
												"nodeType": "Return",
												"src": "1638:133:2"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1365:115:2",
										"text": " @notice How much reward a token gets based on how long it's been in and during which \"snapshots\""
									},
									"functionSelector": "cd3daf9d",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "1494:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1508:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1532:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1532:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1531:9:2"
									},
									"scope": 454,
									"src": "1485:293:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "1912:160:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 230,
																					"name": "s_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 154,
																					"src": "1943:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 232,
																				"indexExpression": {
																					"id": 231,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 225,
																					"src": "1954:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1943:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 238,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 233,
																								"name": "rewardPerToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 222,
																								"src": "1966:14:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 234,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1966:16:2",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"baseExpression": {
																								"id": 235,
																								"name": "s_userRewardPerTokenPaid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 144,
																								"src": "1985:24:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 237,
																							"indexExpression": {
																								"id": 236,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 225,
																								"src": "2010:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1985:33:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1966:52:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 239,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1965:54:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1943:76:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 241,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1942:78:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2039:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "1942:101:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 244,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1941:103:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 245,
															"name": "s_rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "2047:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 247,
														"indexExpression": {
															"id": 246,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "2057:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2047:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1941:124:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 249,
												"nodeType": "Return",
												"src": "1922:143:2"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "1784:60:2",
										"text": " @notice How much reward a user has earned"
									},
									"functionSelector": "008cc262",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "1858:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1873:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1865:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1864:17:2"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1903:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:9:2"
									},
									"scope": 454,
									"src": "1849:223:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "2319:281:2",
										"statements": [
											{
												"expression": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 266,
														"name": "s_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "2329:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 267,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "2346:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2329:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "2329:23:2"
											},
											{
												"expression": {
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 270,
															"name": "s_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "2362:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 273,
														"indexExpression": {
															"expression": {
																"id": 271,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2373:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2373:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2362:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 274,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "2388:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2362:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2362:32:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 278,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2416:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2416:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 280,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "2428:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2409:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2409:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "EmitStatement",
												"src": "2404:31:2"
											},
											{
												"assignments": [
													284
												],
												"declarations": [
													{
														"constant": false,
														"id": 284,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2450:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 303,
														"src": "2445:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 283,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2445:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 295,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 287,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2488:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2488:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 291,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2508:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$454",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$454",
																		"typeString": "contract Staking"
																	}
																],
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2500:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 289,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2500:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2500:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 293,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "2515:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 285,
															"name": "s_stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "2460:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 116,
														"src": "2460:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2445:77:2"
											},
											{
												"condition": {
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2536:8:2",
													"subExpression": {
														"id": 296,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "2537:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 302,
												"nodeType": "IfStatement",
												"src": "2532:62:2",
												"trueBody": {
													"id": 301,
													"nodeType": "Block",
													"src": "2546:48:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 298,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "2567:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2567:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 300,
															"nodeType": "RevertStatement",
															"src": "2560:23:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "2078:101:2",
										"text": " @notice Deposit tokens into this contract\n @param amount | How much to stake"
									},
									"functionSelector": "a694fc3a",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 257,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2253:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2253:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 259,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 256,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 427,
												"src": "2240:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2240:24:2"
										},
										{
											"id": 261,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 260,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "2273:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2273:12:2"
										},
										{
											"arguments": [
												{
													"id": 263,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 254,
													"src": "2307:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 264,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 262,
												"name": "moreThanZero",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 441,
												"src": "2294:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2294:20:2"
										}
									],
									"name": "stake",
									"nameLocation": "2193:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2207:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2199:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2198:16:2"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:0:2"
									},
									"scope": 454,
									"src": "2184:416:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "2797:269:2",
										"statements": [
											{
												"expression": {
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 316,
														"name": "s_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "2807:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 317,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "2824:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2807:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "2807:23:2"
											},
											{
												"expression": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 320,
															"name": "s_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "2840:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 323,
														"indexExpression": {
															"expression": {
																"id": 321,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2851:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2851:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2840:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 324,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "2866:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2840:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "2840:32:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 328,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2901:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2901:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "2913:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "WithdrewStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "2887:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2887:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "EmitStatement",
												"src": "2882:38:2"
											},
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2935:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 349,
														"src": "2930:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 333,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2930:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 341,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 337,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2969:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2969:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 339,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "2981:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 335,
															"name": "s_stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "2945:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 84,
														"src": "2945:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2945:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2930:58:2"
											},
											{
												"condition": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3002:8:2",
													"subExpression": {
														"id": 342,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "3003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 348,
												"nodeType": "IfStatement",
												"src": "2998:62:2",
												"trueBody": {
													"id": 347,
													"nodeType": "Block",
													"src": "3012:48:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 344,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "3033:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3033:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 346,
															"nodeType": "RevertStatement",
															"src": "3026:23:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "2606:105:2",
										"text": " @notice Withdraw tokens from this contract\n @param amount | How much to withdraw"
									},
									"functionSelector": "2e1a7d4d",
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 310,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2772:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2772:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 312,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 309,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 427,
												"src": "2759:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2759:24:2"
										},
										{
											"id": 314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 313,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "2784:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2784:12:2"
										}
									],
									"name": "withdraw",
									"nameLocation": "2725:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2742:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2734:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2734:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2733:16:2"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2797:0:2"
									},
									"scope": 454,
									"src": "2716:350:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "3198:278:2",
										"statements": [
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3216:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 396,
														"src": "3208:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 360,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3208:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 366,
												"initialValue": {
													"baseExpression": {
														"id": 362,
														"name": "s_rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "3225:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 365,
													"indexExpression": {
														"expression": {
															"id": 363,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3235:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3235:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3225:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3208:38:2"
											},
											{
												"expression": {
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 367,
															"name": "s_rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "3256:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 370,
														"indexExpression": {
															"expression": {
																"id": 368,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3266:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3266:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3256:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3280:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3256:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "3256:25:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 375,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3311:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3311:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "3323:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "RewardsClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3296:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3296:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "EmitStatement",
												"src": "3291:39:2"
											},
											{
												"assignments": [
													381
												],
												"declarations": [
													{
														"constant": false,
														"id": 381,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3345:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 396,
														"src": "3340:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 380,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3340:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3379:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3379:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "3391:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 382,
															"name": "s_rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "3355:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 84,
														"src": "3355:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3355:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3340:58:2"
											},
											{
												"condition": {
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3412:8:2",
													"subExpression": {
														"id": 389,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3413:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 395,
												"nodeType": "IfStatement",
												"src": "3408:62:2",
												"trueBody": {
													"id": 394,
													"nodeType": "Block",
													"src": "3422:48:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 391,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "3443:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3443:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 393,
															"nodeType": "RevertStatement",
															"src": "3436:23:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "3072:51:2",
										"text": " @notice User claims their tokens"
									},
									"functionSelector": "b88a802f",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 354,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3173:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3173:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 356,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 353,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 427,
												"src": "3160:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3160:24:2"
										},
										{
											"id": 358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 357,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "3185:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3185:12:2"
										}
									],
									"name": "claimReward",
									"nameLocation": "3137:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3148:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3198:0:2"
									},
									"scope": 454,
									"src": "3128:348:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "3605:227:2",
										"statements": [
											{
												"expression": {
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 401,
														"name": "s_rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "3615:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 402,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "3640:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3640:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3615:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3615:41:2"
											},
											{
												"expression": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "s_lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "3666:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 407,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3685:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3685:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3666:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "3666:34:2"
											},
											{
												"expression": {
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 411,
															"name": "s_rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "3710:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 413,
														"indexExpression": {
															"id": 412,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "3720:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3710:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 415,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "3738:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 414,
															"name": "earned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "3731:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3731:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3710:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "3710:36:2"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 419,
															"name": "s_userRewardPerTokenPaid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "3756:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "3781:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3756:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 422,
														"name": "s_rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "3792:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3756:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "3756:58:2"
											},
											{
												"id": 425,
												"nodeType": "PlaceholderStatement",
												"src": "3824:1:2"
											}
										]
									},
									"id": 427,
									"name": "updateReward",
									"nameLocation": "3575:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3596:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "3588:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3588:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3587:17:2"
									},
									"src": "3566:266:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "3876:95:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "3890:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3900:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3890:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 438,
												"nodeType": "IfStatement",
												"src": "3886:68:2",
												"trueBody": {
													"id": 437,
													"nodeType": "Block",
													"src": "3903:51:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 434,
																	"name": "NeedsMoreThanZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "3924:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3924:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 436,
															"nodeType": "RevertStatement",
															"src": "3917:26:2"
														}
													]
												}
											},
											{
												"id": 439,
												"nodeType": "PlaceholderStatement",
												"src": "3963:1:2"
											}
										]
									},
									"id": 441,
									"name": "moreThanZero",
									"nameLocation": "3847:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "3860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3859:16:2"
									},
									"src": "3838:133:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "4125:43:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 448,
														"name": "s_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "4142:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 450,
													"indexExpression": {
														"id": 449,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "4153:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4142:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 447,
												"id": 451,
												"nodeType": "Return",
												"src": "4135:26:2"
											}
										]
									},
									"functionSelector": "399080ec",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStaked",
									"nameLocation": "4068:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4086:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4078:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4077:17:2"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4116:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4116:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4115:9:2"
									},
									"scope": 454,
									"src": "4059:109:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 455,
							"src": "299:3871:2",
							"usedErrors": [
								123,
								125
							]
						}
					],
					"src": "101:4069:2"
				},
				"id": 2
			}
		}
	}
}